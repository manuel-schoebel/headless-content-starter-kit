/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */







declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  BooleanFilterInput: { // input type
    and?: Array<boolean | null> | null; // [Boolean]
    between?: Array<boolean | null> | null; // [Boolean]
    contains?: boolean | null; // Boolean
    containsi?: boolean | null; // Boolean
    endsWith?: boolean | null; // Boolean
    eq?: boolean | null; // Boolean
    eqi?: boolean | null; // Boolean
    gt?: boolean | null; // Boolean
    gte?: boolean | null; // Boolean
    in?: Array<boolean | null> | null; // [Boolean]
    lt?: boolean | null; // Boolean
    lte?: boolean | null; // Boolean
    ne?: boolean | null; // Boolean
    nei?: boolean | null; // Boolean
    not?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
    notContains?: boolean | null; // Boolean
    notContainsi?: boolean | null; // Boolean
    notIn?: Array<boolean | null> | null; // [Boolean]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<boolean | null> | null; // [Boolean]
    startsWith?: boolean | null; // Boolean
  }
  ComponentContentButtonBarFiltersInput: { // input type
    align?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['ComponentContentButtonBarFiltersInput'] | null> | null; // [ComponentContentButtonBarFiltersInput]
    buttons?: NexusGenInputs['ComponentElementsButtonFiltersInput'] | null; // ComponentElementsButtonFiltersInput
    not?: NexusGenInputs['ComponentContentButtonBarFiltersInput'] | null; // ComponentContentButtonBarFiltersInput
    or?: Array<NexusGenInputs['ComponentContentButtonBarFiltersInput'] | null> | null; // [ComponentContentButtonBarFiltersInput]
  }
  ComponentContentButtonBarInput: { // input type
    align?: NexusGenEnums['ENUM_COMPONENTCONTENTBUTTONBAR_ALIGN'] | null; // ENUM_COMPONENTCONTENTBUTTONBAR_ALIGN
    buttons?: Array<NexusGenInputs['ComponentElementsButtonInput'] | null> | null; // [ComponentElementsButtonInput]
    id?: string | null; // ID
  }
  ComponentContentClientQuoteFiltersInput: { // input type
    and?: Array<NexusGenInputs['ComponentContentClientQuoteFiltersInput'] | null> | null; // [ComponentContentClientQuoteFiltersInput]
    companyName?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['ComponentContentClientQuoteFiltersInput'] | null; // ComponentContentClientQuoteFiltersInput
    or?: Array<NexusGenInputs['ComponentContentClientQuoteFiltersInput'] | null> | null; // [ComponentContentClientQuoteFiltersInput]
    position?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    text?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  ComponentContentClientQuoteInput: { // input type
    avatar?: string | null; // ID
    companyName?: string | null; // String
    id?: string | null; // ID
    name?: string | null; // String
    position?: string | null; // String
    text?: string | null; // String
  }
  ComponentContentCodeFiltersInput: { // input type
    and?: Array<NexusGenInputs['ComponentContentCodeFiltersInput'] | null> | null; // [ComponentContentCodeFiltersInput]
    code?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['ComponentContentCodeFiltersInput'] | null; // ComponentContentCodeFiltersInput
    or?: Array<NexusGenInputs['ComponentContentCodeFiltersInput'] | null> | null; // [ComponentContentCodeFiltersInput]
  }
  ComponentContentCodeInput: { // input type
    code?: string | null; // String
    id?: string | null; // ID
  }
  ComponentContentFaqFiltersInput: { // input type
    and?: Array<NexusGenInputs['ComponentContentFaqFiltersInput'] | null> | null; // [ComponentContentFaqFiltersInput]
    faq?: NexusGenInputs['FaqFiltersInput'] | null; // FaqFiltersInput
    not?: NexusGenInputs['ComponentContentFaqFiltersInput'] | null; // ComponentContentFaqFiltersInput
    or?: Array<NexusGenInputs['ComponentContentFaqFiltersInput'] | null> | null; // [ComponentContentFaqFiltersInput]
  }
  ComponentContentFaqInput: { // input type
    faq?: string | null; // ID
    id?: string | null; // ID
  }
  ComponentContentHeroFiltersInput: { // input type
    and?: Array<NexusGenInputs['ComponentContentHeroFiltersInput'] | null> | null; // [ComponentContentHeroFiltersInput]
    not?: NexusGenInputs['ComponentContentHeroFiltersInput'] | null; // ComponentContentHeroFiltersInput
    or?: Array<NexusGenInputs['ComponentContentHeroFiltersInput'] | null> | null; // [ComponentContentHeroFiltersInput]
    responsiveImage?: NexusGenInputs['ComponentElementsResponsiveImageFiltersInput'] | null; // ComponentElementsResponsiveImageFiltersInput
    subTitle?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    title?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    titleColor?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  ComponentContentHeroInput: { // input type
    id?: string | null; // ID
    responsiveImage?: Array<NexusGenInputs['ComponentElementsResponsiveImageInput'] | null> | null; // [ComponentElementsResponsiveImageInput]
    subTitle?: string | null; // String
    title?: string | null; // String
    titleColor?: NexusGenEnums['ENUM_COMPONENTCONTENTHERO_TITLECOLOR'] | null; // ENUM_COMPONENTCONTENTHERO_TITLECOLOR
  }
  ComponentContentImageGridFiltersInput: { // input type
    and?: Array<NexusGenInputs['ComponentContentImageGridFiltersInput'] | null> | null; // [ComponentContentImageGridFiltersInput]
    gap?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['ComponentContentImageGridFiltersInput'] | null; // ComponentContentImageGridFiltersInput
    or?: Array<NexusGenInputs['ComponentContentImageGridFiltersInput'] | null> | null; // [ComponentContentImageGridFiltersInput]
  }
  ComponentContentImageGridInput: { // input type
    gap?: NexusGenEnums['ENUM_COMPONENTCONTENTIMAGEGRID_GAP'] | null; // ENUM_COMPONENTCONTENTIMAGEGRID_GAP
    id?: string | null; // ID
    images?: Array<string | null> | null; // [ID]
  }
  ComponentContentImageTextFiltersInput: { // input type
    and?: Array<NexusGenInputs['ComponentContentImageTextFiltersInput'] | null> | null; // [ComponentContentImageTextFiltersInput]
    fixedHeight?: NexusGenInputs['IntFilterInput'] | null; // IntFilterInput
    headline?: NexusGenInputs['ComponentElementsHeadlineFiltersInput'] | null; // ComponentElementsHeadlineFiltersInput
    imageColumns?: NexusGenInputs['IntFilterInput'] | null; // IntFilterInput
    imagePriority?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
    mediaPosition?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['ComponentContentImageTextFiltersInput'] | null; // ComponentContentImageTextFiltersInput
    or?: Array<NexusGenInputs['ComponentContentImageTextFiltersInput'] | null> | null; // [ComponentContentImageTextFiltersInput]
    screenHeight?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
    text?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    textAlign?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    textColumns?: NexusGenInputs['IntFilterInput'] | null; // IntFilterInput
  }
  ComponentContentImageTextInput: { // input type
    fixedHeight?: number | null; // Int
    headline?: NexusGenInputs['ComponentElementsHeadlineInput'] | null; // ComponentElementsHeadlineInput
    id?: string | null; // ID
    image?: string | null; // ID
    imageColumns?: number | null; // Int
    imagePriority?: boolean | null; // Boolean
    mediaPosition?: NexusGenEnums['ENUM_COMPONENTCONTENTIMAGETEXT_MEDIAPOSITION'] | null; // ENUM_COMPONENTCONTENTIMAGETEXT_MEDIAPOSITION
    screenHeight?: boolean | null; // Boolean
    text?: string | null; // String
    textAlign?: NexusGenEnums['ENUM_COMPONENTCONTENTIMAGETEXT_TEXTALIGN'] | null; // ENUM_COMPONENTCONTENTIMAGETEXT_TEXTALIGN
    textColumns?: number | null; // Int
  }
  ComponentContentPagePreviewListFiltersInput: { // input type
    and?: Array<NexusGenInputs['ComponentContentPagePreviewListFiltersInput'] | null> | null; // [ComponentContentPagePreviewListFiltersInput]
    hierarchy?: NexusGenInputs['HierarchyFiltersInput'] | null; // HierarchyFiltersInput
    limit?: NexusGenInputs['IntFilterInput'] | null; // IntFilterInput
    not?: NexusGenInputs['ComponentContentPagePreviewListFiltersInput'] | null; // ComponentContentPagePreviewListFiltersInput
    or?: Array<NexusGenInputs['ComponentContentPagePreviewListFiltersInput'] | null> | null; // [ComponentContentPagePreviewListFiltersInput]
    pages?: NexusGenInputs['PageFiltersInput'] | null; // PageFiltersInput
  }
  ComponentContentPagePreviewListInput: { // input type
    hierarchy?: string | null; // ID
    id?: string | null; // ID
    limit?: number | null; // Int
    pages?: Array<string | null> | null; // [ID]
  }
  ComponentContentPricingFiltersInput: { // input type
    and?: Array<NexusGenInputs['ComponentContentPricingFiltersInput'] | null> | null; // [ComponentContentPricingFiltersInput]
    not?: NexusGenInputs['ComponentContentPricingFiltersInput'] | null; // ComponentContentPricingFiltersInput
    or?: Array<NexusGenInputs['ComponentContentPricingFiltersInput'] | null> | null; // [ComponentContentPricingFiltersInput]
    plans?: NexusGenInputs['ComponentElementsPricingPlanFiltersInput'] | null; // ComponentElementsPricingPlanFiltersInput
  }
  ComponentContentPricingInput: { // input type
    id?: string | null; // ID
    plans?: Array<NexusGenInputs['ComponentElementsPricingPlanInput'] | null> | null; // [ComponentElementsPricingPlanInput]
  }
  ComponentContentSectionHeadlineFiltersInput: { // input type
    and?: Array<NexusGenInputs['ComponentContentSectionHeadlineFiltersInput'] | null> | null; // [ComponentContentSectionHeadlineFiltersInput]
    headline?: NexusGenInputs['ComponentElementsHeadlineFiltersInput'] | null; // ComponentElementsHeadlineFiltersInput
    not?: NexusGenInputs['ComponentContentSectionHeadlineFiltersInput'] | null; // ComponentContentSectionHeadlineFiltersInput
    or?: Array<NexusGenInputs['ComponentContentSectionHeadlineFiltersInput'] | null> | null; // [ComponentContentSectionHeadlineFiltersInput]
    useInTableOfContents?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
  }
  ComponentContentSectionHeadlineInput: { // input type
    headline?: NexusGenInputs['ComponentElementsHeadlineInput'] | null; // ComponentElementsHeadlineInput
    id?: string | null; // ID
    useInTableOfContents?: boolean | null; // Boolean
  }
  ComponentContentSocialProofBarFiltersInput: { // input type
    and?: Array<NexusGenInputs['ComponentContentSocialProofBarFiltersInput'] | null> | null; // [ComponentContentSocialProofBarFiltersInput]
    not?: NexusGenInputs['ComponentContentSocialProofBarFiltersInput'] | null; // ComponentContentSocialProofBarFiltersInput
    or?: Array<NexusGenInputs['ComponentContentSocialProofBarFiltersInput'] | null> | null; // [ComponentContentSocialProofBarFiltersInput]
    text?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  ComponentContentSocialProofBarInput: { // input type
    avatars?: Array<string | null> | null; // [ID]
    id?: string | null; // ID
    text?: string | null; // String
  }
  ComponentContentVideoFiltersInput: { // input type
    and?: Array<NexusGenInputs['ComponentContentVideoFiltersInput'] | null> | null; // [ComponentContentVideoFiltersInput]
    not?: NexusGenInputs['ComponentContentVideoFiltersInput'] | null; // ComponentContentVideoFiltersInput
    or?: Array<NexusGenInputs['ComponentContentVideoFiltersInput'] | null> | null; // [ComponentContentVideoFiltersInput]
    youtubeId?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  ComponentContentVideoInput: { // input type
    consentBackgroundImage?: string | null; // ID
    id?: string | null; // ID
    youtubeId?: string | null; // String
  }
  ComponentElementsButtonFiltersInput: { // input type
    and?: Array<NexusGenInputs['ComponentElementsButtonFiltersInput'] | null> | null; // [ComponentElementsButtonFiltersInput]
    externalUrl?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    label?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['ComponentElementsButtonFiltersInput'] | null; // ComponentElementsButtonFiltersInput
    or?: Array<NexusGenInputs['ComponentElementsButtonFiltersInput'] | null> | null; // [ComponentElementsButtonFiltersInput]
    page?: NexusGenInputs['PageFiltersInput'] | null; // PageFiltersInput
    style?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    target?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    variant?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  ComponentElementsButtonInput: { // input type
    externalUrl?: string | null; // String
    id?: string | null; // ID
    label?: string | null; // String
    page?: string | null; // ID
    style?: NexusGenEnums['ENUM_COMPONENTELEMENTSBUTTON_STYLE'] | null; // ENUM_COMPONENTELEMENTSBUTTON_STYLE
    target?: NexusGenEnums['ENUM_COMPONENTELEMENTSBUTTON_TARGET'] | null; // ENUM_COMPONENTELEMENTSBUTTON_TARGET
    variant?: NexusGenEnums['ENUM_COMPONENTELEMENTSBUTTON_VARIANT'] | null; // ENUM_COMPONENTELEMENTSBUTTON_VARIANT
  }
  ComponentElementsHeadlineFiltersInput: { // input type
    align?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['ComponentElementsHeadlineFiltersInput'] | null> | null; // [ComponentElementsHeadlineFiltersInput]
    not?: NexusGenInputs['ComponentElementsHeadlineFiltersInput'] | null; // ComponentElementsHeadlineFiltersInput
    or?: Array<NexusGenInputs['ComponentElementsHeadlineFiltersInput'] | null> | null; // [ComponentElementsHeadlineFiltersInput]
    text?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    variant?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  ComponentElementsHeadlineInput: { // input type
    align?: NexusGenEnums['ENUM_COMPONENTELEMENTSHEADLINE_ALIGN'] | null; // ENUM_COMPONENTELEMENTSHEADLINE_ALIGN
    id?: string | null; // ID
    text?: string | null; // String
    variant?: NexusGenEnums['ENUM_COMPONENTELEMENTSHEADLINE_VARIANT'] | null; // ENUM_COMPONENTELEMENTSHEADLINE_VARIANT
  }
  ComponentElementsPricingPlanFiltersInput: { // input type
    and?: Array<NexusGenInputs['ComponentElementsPricingPlanFiltersInput'] | null> | null; // [ComponentElementsPricingPlanFiltersInput]
    btnLabel?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    features?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    highlightedText?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    href?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['ComponentElementsPricingPlanFiltersInput'] | null; // ComponentElementsPricingPlanFiltersInput
    or?: Array<NexusGenInputs['ComponentElementsPricingPlanFiltersInput'] | null> | null; // [ComponentElementsPricingPlanFiltersInput]
    price?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  ComponentElementsPricingPlanInput: { // input type
    btnLabel?: string | null; // String
    features?: string | null; // String
    highlightedText?: string | null; // String
    href?: string | null; // String
    id?: string | null; // ID
    name?: string | null; // String
    price?: string | null; // String
  }
  ComponentElementsQuestionAndAnswerFiltersInput: { // input type
    and?: Array<NexusGenInputs['ComponentElementsQuestionAndAnswerFiltersInput'] | null> | null; // [ComponentElementsQuestionAndAnswerFiltersInput]
    answer?: NexusGenInputs['JSONFilterInput'] | null; // JSONFilterInput
    not?: NexusGenInputs['ComponentElementsQuestionAndAnswerFiltersInput'] | null; // ComponentElementsQuestionAndAnswerFiltersInput
    or?: Array<NexusGenInputs['ComponentElementsQuestionAndAnswerFiltersInput'] | null> | null; // [ComponentElementsQuestionAndAnswerFiltersInput]
    question?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  ComponentElementsQuestionAndAnswerInput: { // input type
    answer?: NexusGenScalars['JSON'] | null; // JSON
    id?: string | null; // ID
    question?: string | null; // String
  }
  ComponentElementsResponsiveImageFiltersInput: { // input type
    and?: Array<NexusGenInputs['ComponentElementsResponsiveImageFiltersInput'] | null> | null; // [ComponentElementsResponsiveImageFiltersInput]
    not?: NexusGenInputs['ComponentElementsResponsiveImageFiltersInput'] | null; // ComponentElementsResponsiveImageFiltersInput
    or?: Array<NexusGenInputs['ComponentElementsResponsiveImageFiltersInput'] | null> | null; // [ComponentElementsResponsiveImageFiltersInput]
    screenSize?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  ComponentElementsResponsiveImageInput: { // input type
    id?: string | null; // ID
    image?: string | null; // ID
    screenSize?: NexusGenEnums['ENUM_COMPONENTELEMENTSRESPONSIVEIMAGE_SCREENSIZE'] | null; // ENUM_COMPONENTELEMENTSRESPONSIVEIMAGE_SCREENSIZE
  }
  ComponentElementsRichTextFiltersInput: { // input type
    align?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['ComponentElementsRichTextFiltersInput'] | null> | null; // [ComponentElementsRichTextFiltersInput]
    not?: NexusGenInputs['ComponentElementsRichTextFiltersInput'] | null; // ComponentElementsRichTextFiltersInput
    or?: Array<NexusGenInputs['ComponentElementsRichTextFiltersInput'] | null> | null; // [ComponentElementsRichTextFiltersInput]
    text?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  ComponentElementsRichTextInput: { // input type
    align?: NexusGenEnums['ENUM_COMPONENTELEMENTSRICHTEXT_ALIGN'] | null; // ENUM_COMPONENTELEMENTSRICHTEXT_ALIGN
    id?: string | null; // ID
    text?: string | null; // String
  }
  ComponentElementsSpacerFiltersInput: { // input type
    and?: Array<NexusGenInputs['ComponentElementsSpacerFiltersInput'] | null> | null; // [ComponentElementsSpacerFiltersInput]
    not?: NexusGenInputs['ComponentElementsSpacerFiltersInput'] | null; // ComponentElementsSpacerFiltersInput
    or?: Array<NexusGenInputs['ComponentElementsSpacerFiltersInput'] | null> | null; // [ComponentElementsSpacerFiltersInput]
    spaceBottom?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    spaceTop?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  ComponentElementsSpacerInput: { // input type
    id?: string | null; // ID
    spaceBottom?: NexusGenEnums['ENUM_COMPONENTELEMENTSSPACER_SPACEBOTTOM'] | null; // ENUM_COMPONENTELEMENTSSPACER_SPACEBOTTOM
    spaceTop?: NexusGenEnums['ENUM_COMPONENTELEMENTSSPACER_SPACETOP'] | null; // ENUM_COMPONENTELEMENTSSPACER_SPACETOP
  }
  ComponentLayoutsSidebarLayoutFiltersInput: { // input type
    and?: Array<NexusGenInputs['ComponentLayoutsSidebarLayoutFiltersInput'] | null> | null; // [ComponentLayoutsSidebarLayoutFiltersInput]
    not?: NexusGenInputs['ComponentLayoutsSidebarLayoutFiltersInput'] | null; // ComponentLayoutsSidebarLayoutFiltersInput
    or?: Array<NexusGenInputs['ComponentLayoutsSidebarLayoutFiltersInput'] | null> | null; // [ComponentLayoutsSidebarLayoutFiltersInput]
    sidebar_layout?: NexusGenInputs['SidebarLayoutFiltersInput'] | null; // SidebarLayoutFiltersInput
  }
  ComponentLayoutsSidebarLayoutInput: { // input type
    id?: string | null; // ID
    sidebar_layout?: string | null; // ID
  }
  ComponentNavigationDropdownFiltersInput: { // input type
    and?: Array<NexusGenInputs['ComponentNavigationDropdownFiltersInput'] | null> | null; // [ComponentNavigationDropdownFiltersInput]
    links?: NexusGenInputs['ComponentNavigationLinkFiltersInput'] | null; // ComponentNavigationLinkFiltersInput
    not?: NexusGenInputs['ComponentNavigationDropdownFiltersInput'] | null; // ComponentNavigationDropdownFiltersInput
    or?: Array<NexusGenInputs['ComponentNavigationDropdownFiltersInput'] | null> | null; // [ComponentNavigationDropdownFiltersInput]
  }
  ComponentNavigationDropdownInput: { // input type
    id?: string | null; // ID
    links?: Array<NexusGenInputs['ComponentNavigationLinkInput'] | null> | null; // [ComponentNavigationLinkInput]
  }
  ComponentNavigationLinkFiltersInput: { // input type
    and?: Array<NexusGenInputs['ComponentNavigationLinkFiltersInput'] | null> | null; // [ComponentNavigationLinkFiltersInput]
    description?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    label?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['ComponentNavigationLinkFiltersInput'] | null; // ComponentNavigationLinkFiltersInput
    or?: Array<NexusGenInputs['ComponentNavigationLinkFiltersInput'] | null> | null; // [ComponentNavigationLinkFiltersInput]
    page?: NexusGenInputs['PageFiltersInput'] | null; // PageFiltersInput
    target?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    url?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  ComponentNavigationLinkInput: { // input type
    description?: string | null; // String
    id?: string | null; // ID
    image?: string | null; // ID
    label?: string | null; // String
    page?: string | null; // ID
    target?: NexusGenEnums['ENUM_COMPONENTNAVIGATIONLINK_TARGET'] | null; // ENUM_COMPONENTNAVIGATIONLINK_TARGET
    url?: string | null; // String
  }
  ComponentNavigationLinkListFiltersInput: { // input type
    align?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['ComponentNavigationLinkListFiltersInput'] | null> | null; // [ComponentNavigationLinkListFiltersInput]
    headline?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    links?: NexusGenInputs['ComponentNavigationLinkFiltersInput'] | null; // ComponentNavigationLinkFiltersInput
    not?: NexusGenInputs['ComponentNavigationLinkListFiltersInput'] | null; // ComponentNavigationLinkListFiltersInput
    or?: Array<NexusGenInputs['ComponentNavigationLinkListFiltersInput'] | null> | null; // [ComponentNavigationLinkListFiltersInput]
    orientation?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  ComponentNavigationLinkListInput: { // input type
    align?: NexusGenEnums['ENUM_COMPONENTNAVIGATIONLINKLIST_ALIGN'] | null; // ENUM_COMPONENTNAVIGATIONLINKLIST_ALIGN
    headline?: string | null; // String
    id?: string | null; // ID
    links?: Array<NexusGenInputs['ComponentNavigationLinkInput'] | null> | null; // [ComponentNavigationLinkInput]
    orientation?: NexusGenEnums['ENUM_COMPONENTNAVIGATIONLINKLIST_ORIENTATION'] | null; // ENUM_COMPONENTNAVIGATIONLINKLIST_ORIENTATION
  }
  ComponentNavigationTableOfContentsFiltersInput: { // input type
    and?: Array<NexusGenInputs['ComponentNavigationTableOfContentsFiltersInput'] | null> | null; // [ComponentNavigationTableOfContentsFiltersInput]
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['ComponentNavigationTableOfContentsFiltersInput'] | null; // ComponentNavigationTableOfContentsFiltersInput
    or?: Array<NexusGenInputs['ComponentNavigationTableOfContentsFiltersInput'] | null> | null; // [ComponentNavigationTableOfContentsFiltersInput]
  }
  ComponentNavigationTableOfContentsInput: { // input type
    id?: string | null; // ID
    name?: string | null; // String
  }
  DateFilterInput: { // input type
    and?: Array<NexusGenScalars['Date'] | null> | null; // [Date]
    between?: Array<NexusGenScalars['Date'] | null> | null; // [Date]
    contains?: NexusGenScalars['Date'] | null; // Date
    containsi?: NexusGenScalars['Date'] | null; // Date
    endsWith?: NexusGenScalars['Date'] | null; // Date
    eq?: NexusGenScalars['Date'] | null; // Date
    eqi?: NexusGenScalars['Date'] | null; // Date
    gt?: NexusGenScalars['Date'] | null; // Date
    gte?: NexusGenScalars['Date'] | null; // Date
    in?: Array<NexusGenScalars['Date'] | null> | null; // [Date]
    lt?: NexusGenScalars['Date'] | null; // Date
    lte?: NexusGenScalars['Date'] | null; // Date
    ne?: NexusGenScalars['Date'] | null; // Date
    nei?: NexusGenScalars['Date'] | null; // Date
    not?: NexusGenInputs['DateFilterInput'] | null; // DateFilterInput
    notContains?: NexusGenScalars['Date'] | null; // Date
    notContainsi?: NexusGenScalars['Date'] | null; // Date
    notIn?: Array<NexusGenScalars['Date'] | null> | null; // [Date]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<NexusGenScalars['Date'] | null> | null; // [Date]
    startsWith?: NexusGenScalars['Date'] | null; // Date
  }
  DateTimeFilterInput: { // input type
    and?: Array<NexusGenScalars['DateTime'] | null> | null; // [DateTime]
    between?: Array<NexusGenScalars['DateTime'] | null> | null; // [DateTime]
    contains?: NexusGenScalars['DateTime'] | null; // DateTime
    containsi?: NexusGenScalars['DateTime'] | null; // DateTime
    endsWith?: NexusGenScalars['DateTime'] | null; // DateTime
    eq?: NexusGenScalars['DateTime'] | null; // DateTime
    eqi?: NexusGenScalars['DateTime'] | null; // DateTime
    gt?: NexusGenScalars['DateTime'] | null; // DateTime
    gte?: NexusGenScalars['DateTime'] | null; // DateTime
    in?: Array<NexusGenScalars['DateTime'] | null> | null; // [DateTime]
    lt?: NexusGenScalars['DateTime'] | null; // DateTime
    lte?: NexusGenScalars['DateTime'] | null; // DateTime
    ne?: NexusGenScalars['DateTime'] | null; // DateTime
    nei?: NexusGenScalars['DateTime'] | null; // DateTime
    not?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    notContains?: NexusGenScalars['DateTime'] | null; // DateTime
    notContainsi?: NexusGenScalars['DateTime'] | null; // DateTime
    notIn?: Array<NexusGenScalars['DateTime'] | null> | null; // [DateTime]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<NexusGenScalars['DateTime'] | null> | null; // [DateTime]
    startsWith?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  FaqFiltersInput: { // input type
    and?: Array<NexusGenInputs['FaqFiltersInput'] | null> | null; // [FaqFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    description?: NexusGenInputs['JSONFilterInput'] | null; // JSONFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['FaqFiltersInput'] | null; // FaqFiltersInput
    or?: Array<NexusGenInputs['FaqFiltersInput'] | null> | null; // [FaqFiltersInput]
    questions?: NexusGenInputs['ComponentElementsQuestionAndAnswerFiltersInput'] | null; // ComponentElementsQuestionAndAnswerFiltersInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  FaqInput: { // input type
    description?: NexusGenScalars['JSON'] | null; // JSON
    name?: string | null; // String
    questions?: Array<NexusGenInputs['ComponentElementsQuestionAndAnswerInput'] | null> | null; // [ComponentElementsQuestionAndAnswerInput]
  }
  FileInfoInput: { // input type
    alternativeText?: string | null; // String
    caption?: string | null; // String
    name?: string | null; // String
  }
  FloatFilterInput: { // input type
    and?: Array<number | null> | null; // [Float]
    between?: Array<number | null> | null; // [Float]
    contains?: number | null; // Float
    containsi?: number | null; // Float
    endsWith?: number | null; // Float
    eq?: number | null; // Float
    eqi?: number | null; // Float
    gt?: number | null; // Float
    gte?: number | null; // Float
    in?: Array<number | null> | null; // [Float]
    lt?: number | null; // Float
    lte?: number | null; // Float
    ne?: number | null; // Float
    nei?: number | null; // Float
    not?: NexusGenInputs['FloatFilterInput'] | null; // FloatFilterInput
    notContains?: number | null; // Float
    notContainsi?: number | null; // Float
    notIn?: Array<number | null> | null; // [Float]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<number | null> | null; // [Float]
    startsWith?: number | null; // Float
  }
  GlobalFiltersInput: { // input type
    and?: Array<NexusGenInputs['GlobalFiltersInput'] | null> | null; // [GlobalFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    not?: NexusGenInputs['GlobalFiltersInput'] | null; // GlobalFiltersInput
    or?: Array<NexusGenInputs['GlobalFiltersInput'] | null> | null; // [GlobalFiltersInput]
    twitterHandle?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  GlobalInput: { // input type
    Logo?: string | null; // ID
    footer?: NexusGenScalars['GlobalFooterDynamicZoneInput'][] | null; // [GlobalFooterDynamicZoneInput!]
    twitterHandle?: string | null; // String
  }
  HierarchyFiltersInput: { // input type
    and?: Array<NexusGenInputs['HierarchyFiltersInput'] | null> | null; // [HierarchyFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    not?: NexusGenInputs['HierarchyFiltersInput'] | null; // HierarchyFiltersInput
    or?: Array<NexusGenInputs['HierarchyFiltersInput'] | null> | null; // [HierarchyFiltersInput]
    page?: NexusGenInputs['PageFiltersInput'] | null; // PageFiltersInput
    parent?: NexusGenInputs['HierarchyFiltersInput'] | null; // HierarchyFiltersInput
    publishedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    title?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  HierarchyInput: { // input type
    page?: string | null; // ID
    parent?: string | null; // ID
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    title?: string | null; // String
  }
  I18NLocaleFiltersInput: { // input type
    and?: Array<NexusGenInputs['I18NLocaleFiltersInput'] | null> | null; // [I18NLocaleFiltersInput]
    code?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['I18NLocaleFiltersInput'] | null; // I18NLocaleFiltersInput
    or?: Array<NexusGenInputs['I18NLocaleFiltersInput'] | null> | null; // [I18NLocaleFiltersInput]
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  I18NLocaleInput: { // input type
    code?: string | null; // String
    name?: string | null; // String
  }
  IDFilterInput: { // input type
    and?: Array<string | null> | null; // [ID]
    between?: Array<string | null> | null; // [ID]
    contains?: string | null; // ID
    containsi?: string | null; // ID
    endsWith?: string | null; // ID
    eq?: string | null; // ID
    eqi?: string | null; // ID
    gt?: string | null; // ID
    gte?: string | null; // ID
    in?: Array<string | null> | null; // [ID]
    lt?: string | null; // ID
    lte?: string | null; // ID
    ne?: string | null; // ID
    nei?: string | null; // ID
    not?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    notContains?: string | null; // ID
    notContainsi?: string | null; // ID
    notIn?: Array<string | null> | null; // [ID]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<string | null> | null; // [ID]
    startsWith?: string | null; // ID
  }
  IntFilterInput: { // input type
    and?: Array<number | null> | null; // [Int]
    between?: Array<number | null> | null; // [Int]
    contains?: number | null; // Int
    containsi?: number | null; // Int
    endsWith?: number | null; // Int
    eq?: number | null; // Int
    eqi?: number | null; // Int
    gt?: number | null; // Int
    gte?: number | null; // Int
    in?: Array<number | null> | null; // [Int]
    lt?: number | null; // Int
    lte?: number | null; // Int
    ne?: number | null; // Int
    nei?: number | null; // Int
    not?: NexusGenInputs['IntFilterInput'] | null; // IntFilterInput
    notContains?: number | null; // Int
    notContainsi?: number | null; // Int
    notIn?: Array<number | null> | null; // [Int]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<number | null> | null; // [Int]
    startsWith?: number | null; // Int
  }
  JSONFilterInput: { // input type
    and?: Array<NexusGenScalars['JSON'] | null> | null; // [JSON]
    between?: Array<NexusGenScalars['JSON'] | null> | null; // [JSON]
    contains?: NexusGenScalars['JSON'] | null; // JSON
    containsi?: NexusGenScalars['JSON'] | null; // JSON
    endsWith?: NexusGenScalars['JSON'] | null; // JSON
    eq?: NexusGenScalars['JSON'] | null; // JSON
    eqi?: NexusGenScalars['JSON'] | null; // JSON
    gt?: NexusGenScalars['JSON'] | null; // JSON
    gte?: NexusGenScalars['JSON'] | null; // JSON
    in?: Array<NexusGenScalars['JSON'] | null> | null; // [JSON]
    lt?: NexusGenScalars['JSON'] | null; // JSON
    lte?: NexusGenScalars['JSON'] | null; // JSON
    ne?: NexusGenScalars['JSON'] | null; // JSON
    nei?: NexusGenScalars['JSON'] | null; // JSON
    not?: NexusGenInputs['JSONFilterInput'] | null; // JSONFilterInput
    notContains?: NexusGenScalars['JSON'] | null; // JSON
    notContainsi?: NexusGenScalars['JSON'] | null; // JSON
    notIn?: Array<NexusGenScalars['JSON'] | null> | null; // [JSON]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<NexusGenScalars['JSON'] | null> | null; // [JSON]
    startsWith?: NexusGenScalars['JSON'] | null; // JSON
  }
  LongFilterInput: { // input type
    and?: Array<NexusGenScalars['Long'] | null> | null; // [Long]
    between?: Array<NexusGenScalars['Long'] | null> | null; // [Long]
    contains?: NexusGenScalars['Long'] | null; // Long
    containsi?: NexusGenScalars['Long'] | null; // Long
    endsWith?: NexusGenScalars['Long'] | null; // Long
    eq?: NexusGenScalars['Long'] | null; // Long
    eqi?: NexusGenScalars['Long'] | null; // Long
    gt?: NexusGenScalars['Long'] | null; // Long
    gte?: NexusGenScalars['Long'] | null; // Long
    in?: Array<NexusGenScalars['Long'] | null> | null; // [Long]
    lt?: NexusGenScalars['Long'] | null; // Long
    lte?: NexusGenScalars['Long'] | null; // Long
    ne?: NexusGenScalars['Long'] | null; // Long
    nei?: NexusGenScalars['Long'] | null; // Long
    not?: NexusGenInputs['LongFilterInput'] | null; // LongFilterInput
    notContains?: NexusGenScalars['Long'] | null; // Long
    notContainsi?: NexusGenScalars['Long'] | null; // Long
    notIn?: Array<NexusGenScalars['Long'] | null> | null; // [Long]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<NexusGenScalars['Long'] | null> | null; // [Long]
    startsWith?: NexusGenScalars['Long'] | null; // Long
  }
  MenuFiltersInput: { // input type
    and?: Array<NexusGenInputs['MenuFiltersInput'] | null> | null; // [MenuFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    locale?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    localizations?: NexusGenInputs['MenuFiltersInput'] | null; // MenuFiltersInput
    menu_items?: NexusGenInputs['MenuItemFiltersInput'] | null; // MenuItemFiltersInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['MenuFiltersInput'] | null; // MenuFiltersInput
    or?: Array<NexusGenInputs['MenuFiltersInput'] | null> | null; // [MenuFiltersInput]
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  MenuInput: { // input type
    menu_items?: Array<string | null> | null; // [ID]
    name?: string | null; // String
  }
  MenuItemFiltersInput: { // input type
    and?: Array<NexusGenInputs['MenuItemFiltersInput'] | null> | null; // [MenuItemFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    label?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    locale?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    localizations?: NexusGenInputs['MenuItemFiltersInput'] | null; // MenuItemFiltersInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['MenuItemFiltersInput'] | null; // MenuItemFiltersInput
    or?: Array<NexusGenInputs['MenuItemFiltersInput'] | null> | null; // [MenuItemFiltersInput]
    page?: NexusGenInputs['PageFiltersInput'] | null; // PageFiltersInput
    target?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    url?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  MenuItemInput: { // input type
    components?: NexusGenScalars['MenuItemComponentsDynamicZoneInput'][] | null; // [MenuItemComponentsDynamicZoneInput!]
    label?: string | null; // String
    name?: string | null; // String
    page?: string | null; // ID
    target?: NexusGenEnums['ENUM_MENUITEM_TARGET'] | null; // ENUM_MENUITEM_TARGET
    url?: string | null; // String
  }
  PageFiltersInput: { // input type
    and?: Array<NexusGenInputs['PageFiltersInput'] | null> | null; // [PageFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    hierarchy?: NexusGenInputs['HierarchyFiltersInput'] | null; // HierarchyFiltersInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    locale?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    localizations?: NexusGenInputs['PageFiltersInput'] | null; // PageFiltersInput
    metaDescription?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    metaKeywords?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    metaRobots?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    metaTitle?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['PageFiltersInput'] | null; // PageFiltersInput
    or?: Array<NexusGenInputs['PageFiltersInput'] | null> | null; // [PageFiltersInput]
    path?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    publicationDate?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    publishedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    structuredData?: NexusGenInputs['JSONFilterInput'] | null; // JSONFilterInput
    synopsis?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    title?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  PageInput: { // input type
    components?: NexusGenScalars['PageComponentsDynamicZoneInput'][] | null; // [PageComponentsDynamicZoneInput!]
    hierarchy?: string | null; // ID
    metaDescription?: string | null; // String
    metaKeywords?: string | null; // String
    metaRobots?: NexusGenEnums['ENUM_PAGE_METAROBOTS'] | null; // ENUM_PAGE_METAROBOTS
    metaTitle?: string | null; // String
    path?: string | null; // String
    previewImage?: string | null; // ID
    publicationDate?: NexusGenScalars['DateTime'] | null; // DateTime
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    structuredData?: NexusGenScalars['JSON'] | null; // JSON
    synopsis?: string | null; // String
    title?: string | null; // String
  }
  PaginationArg: { // input type
    limit?: number | null; // Int
    page?: number | null; // Int
    pageSize?: number | null; // Int
    start?: number | null; // Int
  }
  SidebarLayoutFiltersInput: { // input type
    and?: Array<NexusGenInputs['SidebarLayoutFiltersInput'] | null> | null; // [SidebarLayoutFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    locale?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    localizations?: NexusGenInputs['SidebarLayoutFiltersInput'] | null; // SidebarLayoutFiltersInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['SidebarLayoutFiltersInput'] | null; // SidebarLayoutFiltersInput
    or?: Array<NexusGenInputs['SidebarLayoutFiltersInput'] | null> | null; // [SidebarLayoutFiltersInput]
    stickySidebar?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  SidebarLayoutInput: { // input type
    contentComponents?: NexusGenScalars['SidebarLayoutContentComponentsDynamicZoneInput'][] | null; // [SidebarLayoutContentComponentsDynamicZoneInput!]
    name?: string | null; // String
    sidebarComponents?: NexusGenScalars['SidebarLayoutSidebarComponentsDynamicZoneInput'][] | null; // [SidebarLayoutSidebarComponentsDynamicZoneInput!]
    stickySidebar?: boolean | null; // Boolean
  }
  StringFilterInput: { // input type
    and?: Array<string | null> | null; // [String]
    between?: Array<string | null> | null; // [String]
    contains?: string | null; // String
    containsi?: string | null; // String
    endsWith?: string | null; // String
    eq?: string | null; // String
    eqi?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: Array<string | null> | null; // [String]
    lt?: string | null; // String
    lte?: string | null; // String
    ne?: string | null; // String
    nei?: string | null; // String
    not?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    notContains?: string | null; // String
    notContainsi?: string | null; // String
    notIn?: Array<string | null> | null; // [String]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<string | null> | null; // [String]
    startsWith?: string | null; // String
  }
  TimeFilterInput: { // input type
    and?: Array<NexusGenScalars['Time'] | null> | null; // [Time]
    between?: Array<NexusGenScalars['Time'] | null> | null; // [Time]
    contains?: NexusGenScalars['Time'] | null; // Time
    containsi?: NexusGenScalars['Time'] | null; // Time
    endsWith?: NexusGenScalars['Time'] | null; // Time
    eq?: NexusGenScalars['Time'] | null; // Time
    eqi?: NexusGenScalars['Time'] | null; // Time
    gt?: NexusGenScalars['Time'] | null; // Time
    gte?: NexusGenScalars['Time'] | null; // Time
    in?: Array<NexusGenScalars['Time'] | null> | null; // [Time]
    lt?: NexusGenScalars['Time'] | null; // Time
    lte?: NexusGenScalars['Time'] | null; // Time
    ne?: NexusGenScalars['Time'] | null; // Time
    nei?: NexusGenScalars['Time'] | null; // Time
    not?: NexusGenInputs['TimeFilterInput'] | null; // TimeFilterInput
    notContains?: NexusGenScalars['Time'] | null; // Time
    notContainsi?: NexusGenScalars['Time'] | null; // Time
    notIn?: Array<NexusGenScalars['Time'] | null> | null; // [Time]
    notNull?: boolean | null; // Boolean
    null?: boolean | null; // Boolean
    or?: Array<NexusGenScalars['Time'] | null> | null; // [Time]
    startsWith?: NexusGenScalars['Time'] | null; // Time
  }
  UploadFileFiltersInput: { // input type
    alternativeText?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['UploadFileFiltersInput'] | null> | null; // [UploadFileFiltersInput]
    caption?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    ext?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    folder?: NexusGenInputs['UploadFolderFiltersInput'] | null; // UploadFolderFiltersInput
    folderPath?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    formats?: NexusGenInputs['JSONFilterInput'] | null; // JSONFilterInput
    hash?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    height?: NexusGenInputs['IntFilterInput'] | null; // IntFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    mime?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
    or?: Array<NexusGenInputs['UploadFileFiltersInput'] | null> | null; // [UploadFileFiltersInput]
    previewUrl?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    provider?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    provider_metadata?: NexusGenInputs['JSONFilterInput'] | null; // JSONFilterInput
    size?: NexusGenInputs['FloatFilterInput'] | null; // FloatFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    url?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    width?: NexusGenInputs['IntFilterInput'] | null; // IntFilterInput
  }
  UploadFileInput: { // input type
    alternativeText?: string | null; // String
    caption?: string | null; // String
    ext?: string | null; // String
    folder?: string | null; // ID
    folderPath?: string | null; // String
    formats?: NexusGenScalars['JSON'] | null; // JSON
    hash?: string | null; // String
    height?: number | null; // Int
    mime?: string | null; // String
    name?: string | null; // String
    previewUrl?: string | null; // String
    provider?: string | null; // String
    provider_metadata?: NexusGenScalars['JSON'] | null; // JSON
    size?: number | null; // Float
    url?: string | null; // String
    width?: number | null; // Int
  }
  UploadFolderFiltersInput: { // input type
    and?: Array<NexusGenInputs['UploadFolderFiltersInput'] | null> | null; // [UploadFolderFiltersInput]
    children?: NexusGenInputs['UploadFolderFiltersInput'] | null; // UploadFolderFiltersInput
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    files?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['UploadFolderFiltersInput'] | null; // UploadFolderFiltersInput
    or?: Array<NexusGenInputs['UploadFolderFiltersInput'] | null> | null; // [UploadFolderFiltersInput]
    parent?: NexusGenInputs['UploadFolderFiltersInput'] | null; // UploadFolderFiltersInput
    path?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    pathId?: NexusGenInputs['IntFilterInput'] | null; // IntFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  UploadFolderInput: { // input type
    children?: Array<string | null> | null; // [ID]
    files?: Array<string | null> | null; // [ID]
    name?: string | null; // String
    parent?: string | null; // ID
    path?: string | null; // String
    pathId?: number | null; // Int
  }
  UsersPermissionsLoginInput: { // input type
    identifier: string; // String!
    password: string; // String!
    provider: string; // String!
  }
  UsersPermissionsPermissionFiltersInput: { // input type
    action?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    and?: Array<NexusGenInputs['UsersPermissionsPermissionFiltersInput'] | null> | null; // [UsersPermissionsPermissionFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    not?: NexusGenInputs['UsersPermissionsPermissionFiltersInput'] | null; // UsersPermissionsPermissionFiltersInput
    or?: Array<NexusGenInputs['UsersPermissionsPermissionFiltersInput'] | null> | null; // [UsersPermissionsPermissionFiltersInput]
    role?: NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null; // UsersPermissionsRoleFiltersInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
  }
  UsersPermissionsPermissionInput: { // input type
    action?: string | null; // String
    role?: string | null; // ID
  }
  UsersPermissionsRegisterInput: { // input type
    email: string; // String!
    password: string; // String!
    username: string; // String!
  }
  UsersPermissionsRoleFiltersInput: { // input type
    and?: Array<NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null> | null; // [UsersPermissionsRoleFiltersInput]
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    description?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    not?: NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null; // UsersPermissionsRoleFiltersInput
    or?: Array<NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null> | null; // [UsersPermissionsRoleFiltersInput]
    permissions?: NexusGenInputs['UsersPermissionsPermissionFiltersInput'] | null; // UsersPermissionsPermissionFiltersInput
    type?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    users?: NexusGenInputs['UsersPermissionsUserFiltersInput'] | null; // UsersPermissionsUserFiltersInput
  }
  UsersPermissionsRoleInput: { // input type
    description?: string | null; // String
    name?: string | null; // String
    permissions?: Array<string | null> | null; // [ID]
    type?: string | null; // String
    users?: Array<string | null> | null; // [ID]
  }
  UsersPermissionsUserFiltersInput: { // input type
    and?: Array<NexusGenInputs['UsersPermissionsUserFiltersInput'] | null> | null; // [UsersPermissionsUserFiltersInput]
    blocked?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
    confirmationToken?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    confirmed?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
    createdAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    email?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    not?: NexusGenInputs['UsersPermissionsUserFiltersInput'] | null; // UsersPermissionsUserFiltersInput
    or?: Array<NexusGenInputs['UsersPermissionsUserFiltersInput'] | null> | null; // [UsersPermissionsUserFiltersInput]
    password?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    provider?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    resetPasswordToken?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    role?: NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null; // UsersPermissionsRoleFiltersInput
    updatedAt?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    username?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  UsersPermissionsUserInput: { // input type
    blocked?: boolean | null; // Boolean
    confirmationToken?: string | null; // String
    confirmed?: boolean | null; // Boolean
    email?: string | null; // String
    password?: string | null; // String
    provider?: string | null; // String
    resetPasswordToken?: string | null; // String
    role?: string | null; // ID
    username?: string | null; // String
  }
}

export interface NexusGenEnums {
  ENUM_COMPONENTCONTENTBUTTONBAR_ALIGN: "center" | "left" | "right"
  ENUM_COMPONENTCONTENTHERO_TITLECOLOR: "black" | "fuchsia" | "white"
  ENUM_COMPONENTCONTENTIMAGEGRID_GAP: "large" | "medium" | "none" | "small"
  ENUM_COMPONENTCONTENTIMAGETEXT_MEDIAPOSITION: "left" | "right"
  ENUM_COMPONENTCONTENTIMAGETEXT_TEXTALIGN: "left" | "right"
  ENUM_COMPONENTELEMENTSBUTTON_STYLE: "primary" | "secondary"
  ENUM_COMPONENTELEMENTSBUTTON_TARGET: "_blank" | "_self"
  ENUM_COMPONENTELEMENTSBUTTON_VARIANT: "filled" | "outlined" | "text"
  ENUM_COMPONENTELEMENTSHEADLINE_ALIGN: "center" | "left" | "right"
  ENUM_COMPONENTELEMENTSHEADLINE_VARIANT: "h1" | "h2" | "h3" | "h4" | "h5"
  ENUM_COMPONENTELEMENTSRESPONSIVEIMAGE_SCREENSIZE: "desktop" | "large mobile" | "medium mobile" | "small mobile" | "tablet"
  ENUM_COMPONENTELEMENTSRICHTEXT_ALIGN: "center" | "left" | "right"
  ENUM_COMPONENTELEMENTSSPACER_SPACEBOTTOM: "large" | "medium" | "small"
  ENUM_COMPONENTELEMENTSSPACER_SPACETOP: "large" | "medium" | "small"
  ENUM_COMPONENTNAVIGATIONLINKLIST_ALIGN: "center" | "left" | "right"
  ENUM_COMPONENTNAVIGATIONLINKLIST_ORIENTATION: "horizontal" | "vertical"
  ENUM_COMPONENTNAVIGATIONLINK_TARGET: "_blank" | "_self"
  ENUM_MENUITEM_TARGET: "_blank" | "_self"
  ENUM_PAGE_METAROBOTS: "Do not show in search engines" | "Show in search engines"
  PublicationState: "live" | "preview"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  Date: any
  DateTime: any
  GlobalFooterDynamicZoneInput: any
  I18NLocaleCode: any
  JSON: any
  Long: any
  MenuItemComponentsDynamicZoneInput: any
  PageComponentsDynamicZoneInput: any
  SidebarLayoutContentComponentsDynamicZoneInput: any
  SidebarLayoutSidebarComponentsDynamicZoneInput: any
  Time: any
  Upload: any
}

export interface NexusGenObjects {
  Breadcrumb: { // root type
    current?: boolean | null; // Boolean
    href?: string | null; // String
    label?: string | null; // String
  }
  ComponentContentButtonBar: { // root type
    align?: NexusGenEnums['ENUM_COMPONENTCONTENTBUTTONBAR_ALIGN'] | null; // ENUM_COMPONENTCONTENTBUTTONBAR_ALIGN
    id: string; // ID!
  }
  ComponentContentClientQuote: { // root type
    companyName?: string | null; // String
    id: string; // ID!
    name?: string | null; // String
    position?: string | null; // String
    text?: string | null; // String
  }
  ComponentContentCode: { // root type
    code?: string | null; // String
    id: string; // ID!
  }
  ComponentContentFaq: { // root type
    id: string; // ID!
  }
  ComponentContentHero: { // root type
    id: string; // ID!
    subTitle?: string | null; // String
    title?: string | null; // String
    titleColor?: NexusGenEnums['ENUM_COMPONENTCONTENTHERO_TITLECOLOR'] | null; // ENUM_COMPONENTCONTENTHERO_TITLECOLOR
  }
  ComponentContentImageGrid: { // root type
    gap?: NexusGenEnums['ENUM_COMPONENTCONTENTIMAGEGRID_GAP'] | null; // ENUM_COMPONENTCONTENTIMAGEGRID_GAP
    id: string; // ID!
  }
  ComponentContentImageText: { // root type
    fixedHeight?: number | null; // Int
    id: string; // ID!
    imageColumns: number; // Int!
    imagePriority?: boolean | null; // Boolean
    mediaPosition: NexusGenEnums['ENUM_COMPONENTCONTENTIMAGETEXT_MEDIAPOSITION']; // ENUM_COMPONENTCONTENTIMAGETEXT_MEDIAPOSITION!
    screenHeight?: boolean | null; // Boolean
    text?: string | null; // String
    textAlign: NexusGenEnums['ENUM_COMPONENTCONTENTIMAGETEXT_TEXTALIGN']; // ENUM_COMPONENTCONTENTIMAGETEXT_TEXTALIGN!
    textColumns: number; // Int!
  }
  ComponentContentPagePreviewList: { // root type
    id: string; // ID!
    limit?: number | null; // Int
  }
  ComponentContentPricing: { // root type
    id: string; // ID!
  }
  ComponentContentSectionHeadline: { // root type
    id: string; // ID!
    useInTableOfContents?: boolean | null; // Boolean
  }
  ComponentContentSocialProofBar: { // root type
    id: string; // ID!
    text?: string | null; // String
  }
  ComponentContentVideo: { // root type
    id: string; // ID!
    youtubeId?: string | null; // String
  }
  ComponentElementsButton: { // root type
    externalUrl?: string | null; // String
    id: string; // ID!
    label?: string | null; // String
    style?: NexusGenEnums['ENUM_COMPONENTELEMENTSBUTTON_STYLE'] | null; // ENUM_COMPONENTELEMENTSBUTTON_STYLE
    target?: NexusGenEnums['ENUM_COMPONENTELEMENTSBUTTON_TARGET'] | null; // ENUM_COMPONENTELEMENTSBUTTON_TARGET
    variant?: NexusGenEnums['ENUM_COMPONENTELEMENTSBUTTON_VARIANT'] | null; // ENUM_COMPONENTELEMENTSBUTTON_VARIANT
  }
  ComponentElementsHeadline: { // root type
    align: NexusGenEnums['ENUM_COMPONENTELEMENTSHEADLINE_ALIGN']; // ENUM_COMPONENTELEMENTSHEADLINE_ALIGN!
    id: string; // ID!
    text?: string | null; // String
    variant?: NexusGenEnums['ENUM_COMPONENTELEMENTSHEADLINE_VARIANT'] | null; // ENUM_COMPONENTELEMENTSHEADLINE_VARIANT
  }
  ComponentElementsPricingPlan: { // root type
    btnLabel?: string | null; // String
    features?: string | null; // String
    highlightedText?: string | null; // String
    href?: string | null; // String
    id: string; // ID!
    name?: string | null; // String
    price?: string | null; // String
  }
  ComponentElementsQuestionAndAnswer: { // root type
    answer: NexusGenScalars['JSON']; // JSON!
    id: string; // ID!
    question: string; // String!
  }
  ComponentElementsResponsiveImage: { // root type
    id: string; // ID!
    screenSize: NexusGenEnums['ENUM_COMPONENTELEMENTSRESPONSIVEIMAGE_SCREENSIZE']; // ENUM_COMPONENTELEMENTSRESPONSIVEIMAGE_SCREENSIZE!
  }
  ComponentElementsRichText: { // root type
    align?: NexusGenEnums['ENUM_COMPONENTELEMENTSRICHTEXT_ALIGN'] | null; // ENUM_COMPONENTELEMENTSRICHTEXT_ALIGN
    id: string; // ID!
    text?: string | null; // String
  }
  ComponentElementsSpacer: { // root type
    id: string; // ID!
    spaceBottom?: NexusGenEnums['ENUM_COMPONENTELEMENTSSPACER_SPACEBOTTOM'] | null; // ENUM_COMPONENTELEMENTSSPACER_SPACEBOTTOM
    spaceTop?: NexusGenEnums['ENUM_COMPONENTELEMENTSSPACER_SPACETOP'] | null; // ENUM_COMPONENTELEMENTSSPACER_SPACETOP
  }
  ComponentLayoutsSidebarLayout: { // root type
    id: string; // ID!
  }
  ComponentNavigationDropdown: { // root type
    id: string; // ID!
  }
  ComponentNavigationLink: { // root type
    description?: string | null; // String
    id: string; // ID!
    label?: string | null; // String
    target?: NexusGenEnums['ENUM_COMPONENTNAVIGATIONLINK_TARGET'] | null; // ENUM_COMPONENTNAVIGATIONLINK_TARGET
    url?: string | null; // String
  }
  ComponentNavigationLinkList: { // root type
    align?: NexusGenEnums['ENUM_COMPONENTNAVIGATIONLINKLIST_ALIGN'] | null; // ENUM_COMPONENTNAVIGATIONLINKLIST_ALIGN
    headline?: string | null; // String
    id: string; // ID!
    orientation?: NexusGenEnums['ENUM_COMPONENTNAVIGATIONLINKLIST_ORIENTATION'] | null; // ENUM_COMPONENTNAVIGATIONLINKLIST_ORIENTATION
  }
  ComponentNavigationTableOfContents: { // root type
    id: string; // ID!
    name?: string | null; // String
  }
  EnablePreviewResponse: { // root type
    success?: boolean | null; // Boolean
  }
  Error: { // root type
    message?: string | null; // String
  }
  Faq: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    description?: NexusGenScalars['JSON'] | null; // JSON
    name?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  FaqEntity: {};
  FaqEntityResponse: {};
  FaqEntityResponseCollection: {};
  FaqRelationResponseCollection: {};
  Global: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    twitterHandle?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  GlobalEntity: {};
  GlobalEntityResponse: {};
  GlobalEntityResponseCollection: {};
  GlobalRelationResponseCollection: {};
  Hierarchy: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    title: string; // String!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  HierarchyEntity: {};
  HierarchyEntityResponse: {};
  HierarchyEntityResponseCollection: {};
  HierarchyRelationResponseCollection: {};
  I18NLocale: { // root type
    code?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    name?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  I18NLocaleEntity: {};
  I18NLocaleEntityResponse: {};
  I18NLocaleEntityResponseCollection: {};
  I18NLocaleRelationResponseCollection: {};
  Menu: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    locale?: string | null; // String
    name?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  MenuEntity: {};
  MenuEntityResponse: {};
  MenuEntityResponseCollection: {};
  MenuItem: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    label?: string | null; // String
    locale?: string | null; // String
    name?: string | null; // String
    target?: NexusGenEnums['ENUM_MENUITEM_TARGET'] | null; // ENUM_MENUITEM_TARGET
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    url?: string | null; // String
  }
  MenuItemEntity: {};
  MenuItemEntityResponse: {};
  MenuItemEntityResponseCollection: {};
  MenuItemRelationResponseCollection: {};
  MenuRelationResponseCollection: {};
  Mutation: {};
  Page: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    locale?: string | null; // String
    metaDescription?: string | null; // String
    metaKeywords?: string | null; // String
    metaRobots?: NexusGenEnums['ENUM_PAGE_METAROBOTS'] | null; // ENUM_PAGE_METAROBOTS
    metaTitle?: string | null; // String
    path: string; // String!
    publicationDate?: NexusGenScalars['DateTime'] | null; // DateTime
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    structuredData?: NexusGenScalars['JSON'] | null; // JSON
    synopsis?: string | null; // String
    title?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  PageEntity: {};
  PageEntityResponse: {};
  PageEntityResponseCollection: {};
  PageRelationResponseCollection: {};
  Pagination: { // root type
    page: number; // Int!
    pageCount: number; // Int!
    pageSize: number; // Int!
    total: number; // Int!
  }
  Query: {};
  ResponseCollectionMeta: {};
  SidebarLayout: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    locale?: string | null; // String
    name?: string | null; // String
    stickySidebar?: boolean | null; // Boolean
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  SidebarLayoutEntity: {};
  SidebarLayoutEntityResponse: {};
  SidebarLayoutEntityResponseCollection: {};
  SidebarLayoutRelationResponseCollection: {};
  UploadFile: { // root type
    alternativeText?: string | null; // String
    caption?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    ext?: string | null; // String
    formats?: NexusGenScalars['JSON'] | null; // JSON
    hash: string; // String!
    height?: number | null; // Int
    mime: string; // String!
    name: string; // String!
    previewUrl?: string | null; // String
    provider: string; // String!
    provider_metadata?: NexusGenScalars['JSON'] | null; // JSON
    size: number; // Float!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    url: string; // String!
    width?: number | null; // Int
  }
  UploadFileEntity: {};
  UploadFileEntityResponse: {};
  UploadFileEntityResponseCollection: {};
  UploadFileRelationResponseCollection: {};
  UploadFolder: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    name: string; // String!
    path: string; // String!
    pathId: number; // Int!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  UploadFolderEntity: {};
  UploadFolderEntityResponse: {};
  UploadFolderEntityResponseCollection: {};
  UploadFolderRelationResponseCollection: {};
  UsersPermissionsCreateRolePayload: { // root type
    ok: boolean; // Boolean!
  }
  UsersPermissionsDeleteRolePayload: { // root type
    ok: boolean; // Boolean!
  }
  UsersPermissionsLoginPayload: { // root type
    jwt?: string | null; // String
    user: NexusGenRootTypes['UsersPermissionsMe']; // UsersPermissionsMe!
  }
  UsersPermissionsMe: { // root type
    blocked?: boolean | null; // Boolean
    confirmed?: boolean | null; // Boolean
    email?: string | null; // String
    id: string; // ID!
    role?: NexusGenRootTypes['UsersPermissionsMeRole'] | null; // UsersPermissionsMeRole
    username: string; // String!
  }
  UsersPermissionsMeRole: { // root type
    description?: string | null; // String
    id: string; // ID!
    name: string; // String!
    type?: string | null; // String
  }
  UsersPermissionsPasswordPayload: { // root type
    ok: boolean; // Boolean!
  }
  UsersPermissionsPermission: { // root type
    action: string; // String!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  UsersPermissionsPermissionEntity: {};
  UsersPermissionsPermissionEntityResponse: {};
  UsersPermissionsPermissionEntityResponseCollection: {};
  UsersPermissionsPermissionRelationResponseCollection: {};
  UsersPermissionsRole: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    description?: string | null; // String
    name: string; // String!
    type?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  UsersPermissionsRoleEntity: {};
  UsersPermissionsRoleEntityResponse: {};
  UsersPermissionsRoleEntityResponseCollection: {};
  UsersPermissionsRoleRelationResponseCollection: {};
  UsersPermissionsUpdateRolePayload: { // root type
    ok: boolean; // Boolean!
  }
  UsersPermissionsUser: { // root type
    blocked?: boolean | null; // Boolean
    confirmed?: boolean | null; // Boolean
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    email: string; // String!
    provider?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    username: string; // String!
  }
  UsersPermissionsUserEntity: {};
  UsersPermissionsUserEntityResponse: {};
  UsersPermissionsUserEntityResponseCollection: {};
  UsersPermissionsUserRelationResponseCollection: {};
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
  GenericMorph: NexusGenRootTypes['ComponentContentButtonBar'] | NexusGenRootTypes['ComponentContentClientQuote'] | NexusGenRootTypes['ComponentContentCode'] | NexusGenRootTypes['ComponentContentFaq'] | NexusGenRootTypes['ComponentContentHero'] | NexusGenRootTypes['ComponentContentImageGrid'] | NexusGenRootTypes['ComponentContentImageText'] | NexusGenRootTypes['ComponentContentPagePreviewList'] | NexusGenRootTypes['ComponentContentPricing'] | NexusGenRootTypes['ComponentContentSectionHeadline'] | NexusGenRootTypes['ComponentContentSocialProofBar'] | NexusGenRootTypes['ComponentContentVideo'] | NexusGenRootTypes['ComponentElementsButton'] | NexusGenRootTypes['ComponentElementsHeadline'] | NexusGenRootTypes['ComponentElementsPricingPlan'] | NexusGenRootTypes['ComponentElementsQuestionAndAnswer'] | NexusGenRootTypes['ComponentElementsResponsiveImage'] | NexusGenRootTypes['ComponentElementsRichText'] | NexusGenRootTypes['ComponentElementsSpacer'] | NexusGenRootTypes['ComponentLayoutsSidebarLayout'] | NexusGenRootTypes['ComponentNavigationDropdown'] | NexusGenRootTypes['ComponentNavigationLink'] | NexusGenRootTypes['ComponentNavigationLinkList'] | NexusGenRootTypes['ComponentNavigationTableOfContents'] | NexusGenRootTypes['Faq'] | NexusGenRootTypes['Global'] | NexusGenRootTypes['Hierarchy'] | NexusGenRootTypes['I18NLocale'] | NexusGenRootTypes['Menu'] | NexusGenRootTypes['MenuItem'] | NexusGenRootTypes['Page'] | NexusGenRootTypes['SidebarLayout'] | NexusGenRootTypes['UploadFile'] | NexusGenRootTypes['UploadFolder'] | NexusGenRootTypes['UsersPermissionsPermission'] | NexusGenRootTypes['UsersPermissionsRole'] | NexusGenRootTypes['UsersPermissionsUser'];
  GlobalFooterDynamicZone: NexusGenRootTypes['ComponentElementsRichText'] | NexusGenRootTypes['ComponentNavigationLinkList'] | NexusGenRootTypes['Error'];
  MenuItemComponentsDynamicZone: NexusGenRootTypes['ComponentContentPagePreviewList'] | NexusGenRootTypes['ComponentNavigationLinkList'] | NexusGenRootTypes['Error'];
  PageComponentsDynamicZone: NexusGenRootTypes['ComponentContentButtonBar'] | NexusGenRootTypes['ComponentContentClientQuote'] | NexusGenRootTypes['ComponentContentFaq'] | NexusGenRootTypes['ComponentContentHero'] | NexusGenRootTypes['ComponentContentImageGrid'] | NexusGenRootTypes['ComponentContentImageText'] | NexusGenRootTypes['ComponentContentPagePreviewList'] | NexusGenRootTypes['ComponentContentPricing'] | NexusGenRootTypes['ComponentContentSectionHeadline'] | NexusGenRootTypes['ComponentContentSocialProofBar'] | NexusGenRootTypes['ComponentContentVideo'] | NexusGenRootTypes['ComponentElementsRichText'] | NexusGenRootTypes['ComponentElementsSpacer'] | NexusGenRootTypes['ComponentLayoutsSidebarLayout'] | NexusGenRootTypes['ComponentNavigationLinkList'] | NexusGenRootTypes['Error'];
  SidebarLayoutContentComponentsDynamicZone: NexusGenRootTypes['ComponentContentCode'] | NexusGenRootTypes['ComponentContentImageGrid'] | NexusGenRootTypes['ComponentContentSectionHeadline'] | NexusGenRootTypes['ComponentContentVideo'] | NexusGenRootTypes['ComponentElementsRichText'] | NexusGenRootTypes['Error'];
  SidebarLayoutSidebarComponentsDynamicZone: NexusGenRootTypes['ComponentNavigationLinkList'] | NexusGenRootTypes['ComponentNavigationTableOfContents'] | NexusGenRootTypes['Error'];
}

export type NexusGenRootTypes = NexusGenObjects & NexusGenUnions

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Breadcrumb: { // field return type
    current: boolean | null; // Boolean
    href: string | null; // String
    label: string | null; // String
  }
  ComponentContentButtonBar: { // field return type
    align: NexusGenEnums['ENUM_COMPONENTCONTENTBUTTONBAR_ALIGN'] | null; // ENUM_COMPONENTCONTENTBUTTONBAR_ALIGN
    buttons: Array<NexusGenRootTypes['ComponentElementsButton'] | null> | null; // [ComponentElementsButton]
    id: string; // ID!
  }
  ComponentContentClientQuote: { // field return type
    avatar: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    companyName: string | null; // String
    id: string; // ID!
    name: string | null; // String
    position: string | null; // String
    text: string | null; // String
  }
  ComponentContentCode: { // field return type
    code: string | null; // String
    html: string | null; // String
    id: string; // ID!
  }
  ComponentContentFaq: { // field return type
    faq: NexusGenRootTypes['FaqEntityResponse'] | null; // FaqEntityResponse
    id: string; // ID!
  }
  ComponentContentHero: { // field return type
    id: string; // ID!
    responsiveImage: Array<NexusGenRootTypes['ComponentElementsResponsiveImage'] | null> | null; // [ComponentElementsResponsiveImage]
    subTitle: string | null; // String
    title: string | null; // String
    titleColor: NexusGenEnums['ENUM_COMPONENTCONTENTHERO_TITLECOLOR'] | null; // ENUM_COMPONENTCONTENTHERO_TITLECOLOR
    titleHtml: string | null; // String
  }
  ComponentContentImageGrid: { // field return type
    gap: NexusGenEnums['ENUM_COMPONENTCONTENTIMAGEGRID_GAP'] | null; // ENUM_COMPONENTCONTENTIMAGEGRID_GAP
    id: string; // ID!
    images: NexusGenRootTypes['UploadFileRelationResponseCollection'] | null; // UploadFileRelationResponseCollection
  }
  ComponentContentImageText: { // field return type
    fixedHeight: number | null; // Int
    headline: NexusGenRootTypes['ComponentElementsHeadline'] | null; // ComponentElementsHeadline
    html: string | null; // String
    id: string; // ID!
    image: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    imageColumns: number; // Int!
    imagePriority: boolean | null; // Boolean
    mediaPosition: NexusGenEnums['ENUM_COMPONENTCONTENTIMAGETEXT_MEDIAPOSITION']; // ENUM_COMPONENTCONTENTIMAGETEXT_MEDIAPOSITION!
    screenHeight: boolean | null; // Boolean
    text: string | null; // String
    textAlign: NexusGenEnums['ENUM_COMPONENTCONTENTIMAGETEXT_TEXTALIGN']; // ENUM_COMPONENTCONTENTIMAGETEXT_TEXTALIGN!
    textColumns: number; // Int!
  }
  ComponentContentPagePreviewList: { // field return type
    hierarchy: NexusGenRootTypes['HierarchyEntityResponse'] | null; // HierarchyEntityResponse
    id: string; // ID!
    limit: number | null; // Int
    pages: NexusGenRootTypes['PageRelationResponseCollection'] | null; // PageRelationResponseCollection
  }
  ComponentContentPricing: { // field return type
    id: string; // ID!
    plans: Array<NexusGenRootTypes['ComponentElementsPricingPlan'] | null> | null; // [ComponentElementsPricingPlan]
  }
  ComponentContentSectionHeadline: { // field return type
    headline: NexusGenRootTypes['ComponentElementsHeadline'] | null; // ComponentElementsHeadline
    id: string; // ID!
    useInTableOfContents: boolean | null; // Boolean
  }
  ComponentContentSocialProofBar: { // field return type
    avatars: NexusGenRootTypes['UploadFileRelationResponseCollection'] | null; // UploadFileRelationResponseCollection
    html: string | null; // String
    id: string; // ID!
    text: string | null; // String
  }
  ComponentContentVideo: { // field return type
    consentBackgroundImage: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    id: string; // ID!
    youtubeId: string | null; // String
  }
  ComponentElementsButton: { // field return type
    externalUrl: string | null; // String
    id: string; // ID!
    label: string | null; // String
    page: NexusGenRootTypes['PageEntityResponse'] | null; // PageEntityResponse
    style: NexusGenEnums['ENUM_COMPONENTELEMENTSBUTTON_STYLE'] | null; // ENUM_COMPONENTELEMENTSBUTTON_STYLE
    target: NexusGenEnums['ENUM_COMPONENTELEMENTSBUTTON_TARGET'] | null; // ENUM_COMPONENTELEMENTSBUTTON_TARGET
    variant: NexusGenEnums['ENUM_COMPONENTELEMENTSBUTTON_VARIANT'] | null; // ENUM_COMPONENTELEMENTSBUTTON_VARIANT
  }
  ComponentElementsHeadline: { // field return type
    align: NexusGenEnums['ENUM_COMPONENTELEMENTSHEADLINE_ALIGN']; // ENUM_COMPONENTELEMENTSHEADLINE_ALIGN!
    id: string; // ID!
    text: string | null; // String
    variant: NexusGenEnums['ENUM_COMPONENTELEMENTSHEADLINE_VARIANT'] | null; // ENUM_COMPONENTELEMENTSHEADLINE_VARIANT
  }
  ComponentElementsPricingPlan: { // field return type
    btnLabel: string | null; // String
    features: string | null; // String
    highlightedText: string | null; // String
    href: string | null; // String
    id: string; // ID!
    name: string | null; // String
    price: string | null; // String
  }
  ComponentElementsQuestionAndAnswer: { // field return type
    answer: NexusGenScalars['JSON']; // JSON!
    id: string; // ID!
    question: string; // String!
  }
  ComponentElementsResponsiveImage: { // field return type
    id: string; // ID!
    image: NexusGenRootTypes['UploadFileEntityResponse']; // UploadFileEntityResponse!
    screenSize: NexusGenEnums['ENUM_COMPONENTELEMENTSRESPONSIVEIMAGE_SCREENSIZE']; // ENUM_COMPONENTELEMENTSRESPONSIVEIMAGE_SCREENSIZE!
  }
  ComponentElementsRichText: { // field return type
    align: NexusGenEnums['ENUM_COMPONENTELEMENTSRICHTEXT_ALIGN'] | null; // ENUM_COMPONENTELEMENTSRICHTEXT_ALIGN
    html: string | null; // String
    id: string; // ID!
    text: string | null; // String
  }
  ComponentElementsSpacer: { // field return type
    id: string; // ID!
    spaceBottom: NexusGenEnums['ENUM_COMPONENTELEMENTSSPACER_SPACEBOTTOM'] | null; // ENUM_COMPONENTELEMENTSSPACER_SPACEBOTTOM
    spaceTop: NexusGenEnums['ENUM_COMPONENTELEMENTSSPACER_SPACETOP'] | null; // ENUM_COMPONENTELEMENTSSPACER_SPACETOP
  }
  ComponentLayoutsSidebarLayout: { // field return type
    id: string; // ID!
    sidebar_layout: NexusGenRootTypes['SidebarLayoutEntityResponse'] | null; // SidebarLayoutEntityResponse
  }
  ComponentNavigationDropdown: { // field return type
    id: string; // ID!
    links: Array<NexusGenRootTypes['ComponentNavigationLink'] | null> | null; // [ComponentNavigationLink]
  }
  ComponentNavigationLink: { // field return type
    description: string | null; // String
    id: string; // ID!
    image: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    label: string | null; // String
    page: NexusGenRootTypes['PageEntityResponse'] | null; // PageEntityResponse
    target: NexusGenEnums['ENUM_COMPONENTNAVIGATIONLINK_TARGET'] | null; // ENUM_COMPONENTNAVIGATIONLINK_TARGET
    url: string | null; // String
  }
  ComponentNavigationLinkList: { // field return type
    align: NexusGenEnums['ENUM_COMPONENTNAVIGATIONLINKLIST_ALIGN'] | null; // ENUM_COMPONENTNAVIGATIONLINKLIST_ALIGN
    headline: string | null; // String
    id: string; // ID!
    links: Array<NexusGenRootTypes['ComponentNavigationLink'] | null> | null; // [ComponentNavigationLink]
    orientation: NexusGenEnums['ENUM_COMPONENTNAVIGATIONLINKLIST_ORIENTATION'] | null; // ENUM_COMPONENTNAVIGATIONLINKLIST_ORIENTATION
  }
  ComponentNavigationTableOfContents: { // field return type
    id: string; // ID!
    name: string | null; // String
  }
  EnablePreviewResponse: { // field return type
    success: boolean | null; // Boolean
  }
  Error: { // field return type
    code: string; // String!
    message: string | null; // String
  }
  Faq: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    description: NexusGenScalars['JSON'] | null; // JSON
    name: string | null; // String
    questions: Array<NexusGenRootTypes['ComponentElementsQuestionAndAnswer'] | null> | null; // [ComponentElementsQuestionAndAnswer]
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  FaqEntity: { // field return type
    attributes: NexusGenRootTypes['Faq'] | null; // Faq
    id: string | null; // ID
  }
  FaqEntityResponse: { // field return type
    data: NexusGenRootTypes['FaqEntity'] | null; // FaqEntity
  }
  FaqEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['FaqEntity'][]; // [FaqEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  FaqRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['FaqEntity'][]; // [FaqEntity!]!
  }
  Global: { // field return type
    Logo: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    footer: Array<NexusGenRootTypes['GlobalFooterDynamicZone'] | null> | null; // [GlobalFooterDynamicZone]
    twitterHandle: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  GlobalEntity: { // field return type
    attributes: NexusGenRootTypes['Global'] | null; // Global
    id: string | null; // ID
  }
  GlobalEntityResponse: { // field return type
    data: NexusGenRootTypes['GlobalEntity'] | null; // GlobalEntity
  }
  GlobalEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['GlobalEntity'][]; // [GlobalEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  GlobalRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['GlobalEntity'][]; // [GlobalEntity!]!
  }
  Hierarchy: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    page: NexusGenRootTypes['PageEntityResponse'] | null; // PageEntityResponse
    parent: NexusGenRootTypes['HierarchyEntityResponse'] | null; // HierarchyEntityResponse
    publishedAt: NexusGenScalars['DateTime'] | null; // DateTime
    title: string; // String!
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  HierarchyEntity: { // field return type
    attributes: NexusGenRootTypes['Hierarchy'] | null; // Hierarchy
    childIds: Array<string | null> | null; // [String]
    id: string | null; // ID
    parents: Array<NexusGenRootTypes['Breadcrumb'] | null> | null; // [Breadcrumb]
  }
  HierarchyEntityResponse: { // field return type
    data: NexusGenRootTypes['HierarchyEntity'] | null; // HierarchyEntity
  }
  HierarchyEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['HierarchyEntity'][]; // [HierarchyEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  HierarchyRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['HierarchyEntity'][]; // [HierarchyEntity!]!
  }
  I18NLocale: { // field return type
    code: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    name: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  I18NLocaleEntity: { // field return type
    attributes: NexusGenRootTypes['I18NLocale'] | null; // I18NLocale
    id: string | null; // ID
  }
  I18NLocaleEntityResponse: { // field return type
    data: NexusGenRootTypes['I18NLocaleEntity'] | null; // I18NLocaleEntity
  }
  I18NLocaleEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['I18NLocaleEntity'][]; // [I18NLocaleEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  I18NLocaleRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['I18NLocaleEntity'][]; // [I18NLocaleEntity!]!
  }
  Menu: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    locale: string | null; // String
    localizations: NexusGenRootTypes['MenuRelationResponseCollection'] | null; // MenuRelationResponseCollection
    menu_items: NexusGenRootTypes['MenuItemRelationResponseCollection'] | null; // MenuItemRelationResponseCollection
    name: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  MenuEntity: { // field return type
    attributes: NexusGenRootTypes['Menu'] | null; // Menu
    id: string | null; // ID
  }
  MenuEntityResponse: { // field return type
    data: NexusGenRootTypes['MenuEntity'] | null; // MenuEntity
  }
  MenuEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['MenuEntity'][]; // [MenuEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  MenuItem: { // field return type
    components: Array<NexusGenRootTypes['MenuItemComponentsDynamicZone'] | null> | null; // [MenuItemComponentsDynamicZone]
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    label: string | null; // String
    locale: string | null; // String
    localizations: NexusGenRootTypes['MenuItemRelationResponseCollection'] | null; // MenuItemRelationResponseCollection
    name: string | null; // String
    page: NexusGenRootTypes['PageEntityResponse'] | null; // PageEntityResponse
    target: NexusGenEnums['ENUM_MENUITEM_TARGET'] | null; // ENUM_MENUITEM_TARGET
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    url: string | null; // String
  }
  MenuItemEntity: { // field return type
    attributes: NexusGenRootTypes['MenuItem'] | null; // MenuItem
    id: string | null; // ID
  }
  MenuItemEntityResponse: { // field return type
    data: NexusGenRootTypes['MenuItemEntity'] | null; // MenuItemEntity
  }
  MenuItemEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['MenuItemEntity'][]; // [MenuItemEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  MenuItemRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['MenuItemEntity'][]; // [MenuItemEntity!]!
  }
  MenuRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['MenuEntity'][]; // [MenuEntity!]!
  }
  Mutation: { // field return type
    changePassword: NexusGenRootTypes['UsersPermissionsLoginPayload'] | null; // UsersPermissionsLoginPayload
    createFaq: NexusGenRootTypes['FaqEntityResponse'] | null; // FaqEntityResponse
    createHierarchy: NexusGenRootTypes['HierarchyEntityResponse'] | null; // HierarchyEntityResponse
    createMenu: NexusGenRootTypes['MenuEntityResponse'] | null; // MenuEntityResponse
    createMenuItem: NexusGenRootTypes['MenuItemEntityResponse'] | null; // MenuItemEntityResponse
    createMenuItemLocalization: NexusGenRootTypes['MenuItemEntityResponse'] | null; // MenuItemEntityResponse
    createMenuLocalization: NexusGenRootTypes['MenuEntityResponse'] | null; // MenuEntityResponse
    createPage: NexusGenRootTypes['PageEntityResponse'] | null; // PageEntityResponse
    createPageLocalization: NexusGenRootTypes['PageEntityResponse'] | null; // PageEntityResponse
    createSidebarLayout: NexusGenRootTypes['SidebarLayoutEntityResponse'] | null; // SidebarLayoutEntityResponse
    createSidebarLayoutLocalization: NexusGenRootTypes['SidebarLayoutEntityResponse'] | null; // SidebarLayoutEntityResponse
    createUploadFile: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    createUploadFolder: NexusGenRootTypes['UploadFolderEntityResponse'] | null; // UploadFolderEntityResponse
    createUsersPermissionsRole: NexusGenRootTypes['UsersPermissionsCreateRolePayload'] | null; // UsersPermissionsCreateRolePayload
    createUsersPermissionsUser: NexusGenRootTypes['UsersPermissionsUserEntityResponse']; // UsersPermissionsUserEntityResponse!
    deleteFaq: NexusGenRootTypes['FaqEntityResponse'] | null; // FaqEntityResponse
    deleteGlobal: NexusGenRootTypes['GlobalEntityResponse'] | null; // GlobalEntityResponse
    deleteHierarchy: NexusGenRootTypes['HierarchyEntityResponse'] | null; // HierarchyEntityResponse
    deleteMenu: NexusGenRootTypes['MenuEntityResponse'] | null; // MenuEntityResponse
    deleteMenuItem: NexusGenRootTypes['MenuItemEntityResponse'] | null; // MenuItemEntityResponse
    deletePage: NexusGenRootTypes['PageEntityResponse'] | null; // PageEntityResponse
    deleteSidebarLayout: NexusGenRootTypes['SidebarLayoutEntityResponse'] | null; // SidebarLayoutEntityResponse
    deleteUploadFile: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    deleteUploadFolder: NexusGenRootTypes['UploadFolderEntityResponse'] | null; // UploadFolderEntityResponse
    deleteUsersPermissionsRole: NexusGenRootTypes['UsersPermissionsDeleteRolePayload'] | null; // UsersPermissionsDeleteRolePayload
    deleteUsersPermissionsUser: NexusGenRootTypes['UsersPermissionsUserEntityResponse']; // UsersPermissionsUserEntityResponse!
    emailConfirmation: NexusGenRootTypes['UsersPermissionsLoginPayload'] | null; // UsersPermissionsLoginPayload
    enablePreview: NexusGenRootTypes['EnablePreviewResponse'] | null; // EnablePreviewResponse
    forgotPassword: NexusGenRootTypes['UsersPermissionsPasswordPayload'] | null; // UsersPermissionsPasswordPayload
    login: NexusGenRootTypes['UsersPermissionsLoginPayload']; // UsersPermissionsLoginPayload!
    multipleUpload: Array<NexusGenRootTypes['UploadFileEntityResponse'] | null>; // [UploadFileEntityResponse]!
    register: NexusGenRootTypes['UsersPermissionsLoginPayload']; // UsersPermissionsLoginPayload!
    removeFile: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    resetPassword: NexusGenRootTypes['UsersPermissionsLoginPayload'] | null; // UsersPermissionsLoginPayload
    updateFaq: NexusGenRootTypes['FaqEntityResponse'] | null; // FaqEntityResponse
    updateFileInfo: NexusGenRootTypes['UploadFileEntityResponse']; // UploadFileEntityResponse!
    updateGlobal: NexusGenRootTypes['GlobalEntityResponse'] | null; // GlobalEntityResponse
    updateHierarchy: NexusGenRootTypes['HierarchyEntityResponse'] | null; // HierarchyEntityResponse
    updateMenu: NexusGenRootTypes['MenuEntityResponse'] | null; // MenuEntityResponse
    updateMenuItem: NexusGenRootTypes['MenuItemEntityResponse'] | null; // MenuItemEntityResponse
    updatePage: NexusGenRootTypes['PageEntityResponse'] | null; // PageEntityResponse
    updateSidebarLayout: NexusGenRootTypes['SidebarLayoutEntityResponse'] | null; // SidebarLayoutEntityResponse
    updateUploadFile: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    updateUploadFolder: NexusGenRootTypes['UploadFolderEntityResponse'] | null; // UploadFolderEntityResponse
    updateUsersPermissionsRole: NexusGenRootTypes['UsersPermissionsUpdateRolePayload'] | null; // UsersPermissionsUpdateRolePayload
    updateUsersPermissionsUser: NexusGenRootTypes['UsersPermissionsUserEntityResponse']; // UsersPermissionsUserEntityResponse!
    upload: NexusGenRootTypes['UploadFileEntityResponse']; // UploadFileEntityResponse!
  }
  Page: { // field return type
    components: Array<NexusGenRootTypes['PageComponentsDynamicZone'] | null> | null; // [PageComponentsDynamicZone]
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    hierarchy: NexusGenRootTypes['HierarchyEntityResponse'] | null; // HierarchyEntityResponse
    locale: string | null; // String
    localizations: NexusGenRootTypes['PageRelationResponseCollection'] | null; // PageRelationResponseCollection
    metaDescription: string | null; // String
    metaKeywords: string | null; // String
    metaRobots: NexusGenEnums['ENUM_PAGE_METAROBOTS'] | null; // ENUM_PAGE_METAROBOTS
    metaTitle: string | null; // String
    path: string; // String!
    previewImage: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    publicationDate: NexusGenScalars['DateTime'] | null; // DateTime
    publishedAt: NexusGenScalars['DateTime'] | null; // DateTime
    structuredData: NexusGenScalars['JSON'] | null; // JSON
    synopsis: string | null; // String
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  PageEntity: { // field return type
    attributes: NexusGenRootTypes['Page'] | null; // Page
    id: string | null; // ID
  }
  PageEntityResponse: { // field return type
    data: NexusGenRootTypes['PageEntity'] | null; // PageEntity
  }
  PageEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['PageEntity'][]; // [PageEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  PageRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['PageEntity'][]; // [PageEntity!]!
  }
  Pagination: { // field return type
    page: number; // Int!
    pageCount: number; // Int!
    pageSize: number; // Int!
    total: number; // Int!
  }
  Query: { // field return type
    faq: NexusGenRootTypes['FaqEntityResponse'] | null; // FaqEntityResponse
    faqs: NexusGenRootTypes['FaqEntityResponseCollection'] | null; // FaqEntityResponseCollection
    global: NexusGenRootTypes['GlobalEntityResponse'] | null; // GlobalEntityResponse
    hierarchies: NexusGenRootTypes['HierarchyEntityResponseCollection'] | null; // HierarchyEntityResponseCollection
    hierarchy: NexusGenRootTypes['HierarchyEntityResponse'] | null; // HierarchyEntityResponse
    i18NLocale: NexusGenRootTypes['I18NLocaleEntityResponse'] | null; // I18NLocaleEntityResponse
    i18NLocales: NexusGenRootTypes['I18NLocaleEntityResponseCollection'] | null; // I18NLocaleEntityResponseCollection
    me: NexusGenRootTypes['UsersPermissionsMe'] | null; // UsersPermissionsMe
    menu: NexusGenRootTypes['MenuEntityResponse'] | null; // MenuEntityResponse
    menuItem: NexusGenRootTypes['MenuItemEntityResponse'] | null; // MenuItemEntityResponse
    menuItems: NexusGenRootTypes['MenuItemEntityResponseCollection'] | null; // MenuItemEntityResponseCollection
    menus: NexusGenRootTypes['MenuEntityResponseCollection'] | null; // MenuEntityResponseCollection
    page: NexusGenRootTypes['PageEntityResponse'] | null; // PageEntityResponse
    pages: NexusGenRootTypes['PageEntityResponseCollection'] | null; // PageEntityResponseCollection
    sidebarLayout: NexusGenRootTypes['SidebarLayoutEntityResponse'] | null; // SidebarLayoutEntityResponse
    sidebarLayouts: NexusGenRootTypes['SidebarLayoutEntityResponseCollection'] | null; // SidebarLayoutEntityResponseCollection
    uploadFile: NexusGenRootTypes['UploadFileEntityResponse'] | null; // UploadFileEntityResponse
    uploadFiles: NexusGenRootTypes['UploadFileEntityResponseCollection'] | null; // UploadFileEntityResponseCollection
    uploadFolder: NexusGenRootTypes['UploadFolderEntityResponse'] | null; // UploadFolderEntityResponse
    uploadFolders: NexusGenRootTypes['UploadFolderEntityResponseCollection'] | null; // UploadFolderEntityResponseCollection
    usersPermissionsRole: NexusGenRootTypes['UsersPermissionsRoleEntityResponse'] | null; // UsersPermissionsRoleEntityResponse
    usersPermissionsRoles: NexusGenRootTypes['UsersPermissionsRoleEntityResponseCollection'] | null; // UsersPermissionsRoleEntityResponseCollection
    usersPermissionsUser: NexusGenRootTypes['UsersPermissionsUserEntityResponse'] | null; // UsersPermissionsUserEntityResponse
    usersPermissionsUsers: NexusGenRootTypes['UsersPermissionsUserEntityResponseCollection'] | null; // UsersPermissionsUserEntityResponseCollection
  }
  ResponseCollectionMeta: { // field return type
    pagination: NexusGenRootTypes['Pagination']; // Pagination!
  }
  SidebarLayout: { // field return type
    contentComponents: Array<NexusGenRootTypes['SidebarLayoutContentComponentsDynamicZone'] | null> | null; // [SidebarLayoutContentComponentsDynamicZone]
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    locale: string | null; // String
    localizations: NexusGenRootTypes['SidebarLayoutRelationResponseCollection'] | null; // SidebarLayoutRelationResponseCollection
    name: string | null; // String
    sidebarComponents: Array<NexusGenRootTypes['SidebarLayoutSidebarComponentsDynamicZone'] | null> | null; // [SidebarLayoutSidebarComponentsDynamicZone]
    stickySidebar: boolean | null; // Boolean
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  SidebarLayoutEntity: { // field return type
    attributes: NexusGenRootTypes['SidebarLayout'] | null; // SidebarLayout
    id: string | null; // ID
  }
  SidebarLayoutEntityResponse: { // field return type
    data: NexusGenRootTypes['SidebarLayoutEntity'] | null; // SidebarLayoutEntity
  }
  SidebarLayoutEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['SidebarLayoutEntity'][]; // [SidebarLayoutEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  SidebarLayoutRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['SidebarLayoutEntity'][]; // [SidebarLayoutEntity!]!
  }
  UploadFile: { // field return type
    alternativeText: string | null; // String
    caption: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    ext: string | null; // String
    formats: NexusGenScalars['JSON'] | null; // JSON
    hash: string; // String!
    height: number | null; // Int
    mime: string; // String!
    name: string; // String!
    previewUrl: string | null; // String
    provider: string; // String!
    provider_metadata: NexusGenScalars['JSON'] | null; // JSON
    related: Array<NexusGenRootTypes['GenericMorph'] | null> | null; // [GenericMorph]
    size: number; // Float!
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    url: string; // String!
    width: number | null; // Int
  }
  UploadFileEntity: { // field return type
    attributes: NexusGenRootTypes['UploadFile'] | null; // UploadFile
    id: string | null; // ID
  }
  UploadFileEntityResponse: { // field return type
    data: NexusGenRootTypes['UploadFileEntity'] | null; // UploadFileEntity
  }
  UploadFileEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['UploadFileEntity'][]; // [UploadFileEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UploadFileRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['UploadFileEntity'][]; // [UploadFileEntity!]!
  }
  UploadFolder: { // field return type
    children: NexusGenRootTypes['UploadFolderRelationResponseCollection'] | null; // UploadFolderRelationResponseCollection
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    files: NexusGenRootTypes['UploadFileRelationResponseCollection'] | null; // UploadFileRelationResponseCollection
    name: string; // String!
    parent: NexusGenRootTypes['UploadFolderEntityResponse'] | null; // UploadFolderEntityResponse
    path: string; // String!
    pathId: number; // Int!
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  UploadFolderEntity: { // field return type
    attributes: NexusGenRootTypes['UploadFolder'] | null; // UploadFolder
    id: string | null; // ID
  }
  UploadFolderEntityResponse: { // field return type
    data: NexusGenRootTypes['UploadFolderEntity'] | null; // UploadFolderEntity
  }
  UploadFolderEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['UploadFolderEntity'][]; // [UploadFolderEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UploadFolderRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['UploadFolderEntity'][]; // [UploadFolderEntity!]!
  }
  UsersPermissionsCreateRolePayload: { // field return type
    ok: boolean; // Boolean!
  }
  UsersPermissionsDeleteRolePayload: { // field return type
    ok: boolean; // Boolean!
  }
  UsersPermissionsLoginPayload: { // field return type
    jwt: string | null; // String
    user: NexusGenRootTypes['UsersPermissionsMe']; // UsersPermissionsMe!
  }
  UsersPermissionsMe: { // field return type
    blocked: boolean | null; // Boolean
    confirmed: boolean | null; // Boolean
    email: string | null; // String
    id: string; // ID!
    role: NexusGenRootTypes['UsersPermissionsMeRole'] | null; // UsersPermissionsMeRole
    username: string; // String!
  }
  UsersPermissionsMeRole: { // field return type
    description: string | null; // String
    id: string; // ID!
    name: string; // String!
    type: string | null; // String
  }
  UsersPermissionsPasswordPayload: { // field return type
    ok: boolean; // Boolean!
  }
  UsersPermissionsPermission: { // field return type
    action: string; // String!
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    role: NexusGenRootTypes['UsersPermissionsRoleEntityResponse'] | null; // UsersPermissionsRoleEntityResponse
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  UsersPermissionsPermissionEntity: { // field return type
    attributes: NexusGenRootTypes['UsersPermissionsPermission'] | null; // UsersPermissionsPermission
    id: string | null; // ID
  }
  UsersPermissionsPermissionEntityResponse: { // field return type
    data: NexusGenRootTypes['UsersPermissionsPermissionEntity'] | null; // UsersPermissionsPermissionEntity
  }
  UsersPermissionsPermissionEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsPermissionEntity'][]; // [UsersPermissionsPermissionEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UsersPermissionsPermissionRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsPermissionEntity'][]; // [UsersPermissionsPermissionEntity!]!
  }
  UsersPermissionsRole: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    description: string | null; // String
    name: string; // String!
    permissions: NexusGenRootTypes['UsersPermissionsPermissionRelationResponseCollection'] | null; // UsersPermissionsPermissionRelationResponseCollection
    type: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    users: NexusGenRootTypes['UsersPermissionsUserRelationResponseCollection'] | null; // UsersPermissionsUserRelationResponseCollection
  }
  UsersPermissionsRoleEntity: { // field return type
    attributes: NexusGenRootTypes['UsersPermissionsRole'] | null; // UsersPermissionsRole
    id: string | null; // ID
  }
  UsersPermissionsRoleEntityResponse: { // field return type
    data: NexusGenRootTypes['UsersPermissionsRoleEntity'] | null; // UsersPermissionsRoleEntity
  }
  UsersPermissionsRoleEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsRoleEntity'][]; // [UsersPermissionsRoleEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UsersPermissionsRoleRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsRoleEntity'][]; // [UsersPermissionsRoleEntity!]!
  }
  UsersPermissionsUpdateRolePayload: { // field return type
    ok: boolean; // Boolean!
  }
  UsersPermissionsUser: { // field return type
    blocked: boolean | null; // Boolean
    confirmed: boolean | null; // Boolean
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    email: string; // String!
    provider: string | null; // String
    role: NexusGenRootTypes['UsersPermissionsRoleEntityResponse'] | null; // UsersPermissionsRoleEntityResponse
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    username: string; // String!
  }
  UsersPermissionsUserEntity: { // field return type
    attributes: NexusGenRootTypes['UsersPermissionsUser'] | null; // UsersPermissionsUser
    id: string | null; // ID
  }
  UsersPermissionsUserEntityResponse: { // field return type
    data: NexusGenRootTypes['UsersPermissionsUserEntity'] | null; // UsersPermissionsUserEntity
  }
  UsersPermissionsUserEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsUserEntity'][]; // [UsersPermissionsUserEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UsersPermissionsUserRelationResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsUserEntity'][]; // [UsersPermissionsUserEntity!]!
  }
}

export interface NexusGenFieldTypeNames {
  Breadcrumb: { // field return type name
    current: 'Boolean'
    href: 'String'
    label: 'String'
  }
  ComponentContentButtonBar: { // field return type name
    align: 'ENUM_COMPONENTCONTENTBUTTONBAR_ALIGN'
    buttons: 'ComponentElementsButton'
    id: 'ID'
  }
  ComponentContentClientQuote: { // field return type name
    avatar: 'UploadFileEntityResponse'
    companyName: 'String'
    id: 'ID'
    name: 'String'
    position: 'String'
    text: 'String'
  }
  ComponentContentCode: { // field return type name
    code: 'String'
    html: 'String'
    id: 'ID'
  }
  ComponentContentFaq: { // field return type name
    faq: 'FaqEntityResponse'
    id: 'ID'
  }
  ComponentContentHero: { // field return type name
    id: 'ID'
    responsiveImage: 'ComponentElementsResponsiveImage'
    subTitle: 'String'
    title: 'String'
    titleColor: 'ENUM_COMPONENTCONTENTHERO_TITLECOLOR'
    titleHtml: 'String'
  }
  ComponentContentImageGrid: { // field return type name
    gap: 'ENUM_COMPONENTCONTENTIMAGEGRID_GAP'
    id: 'ID'
    images: 'UploadFileRelationResponseCollection'
  }
  ComponentContentImageText: { // field return type name
    fixedHeight: 'Int'
    headline: 'ComponentElementsHeadline'
    html: 'String'
    id: 'ID'
    image: 'UploadFileEntityResponse'
    imageColumns: 'Int'
    imagePriority: 'Boolean'
    mediaPosition: 'ENUM_COMPONENTCONTENTIMAGETEXT_MEDIAPOSITION'
    screenHeight: 'Boolean'
    text: 'String'
    textAlign: 'ENUM_COMPONENTCONTENTIMAGETEXT_TEXTALIGN'
    textColumns: 'Int'
  }
  ComponentContentPagePreviewList: { // field return type name
    hierarchy: 'HierarchyEntityResponse'
    id: 'ID'
    limit: 'Int'
    pages: 'PageRelationResponseCollection'
  }
  ComponentContentPricing: { // field return type name
    id: 'ID'
    plans: 'ComponentElementsPricingPlan'
  }
  ComponentContentSectionHeadline: { // field return type name
    headline: 'ComponentElementsHeadline'
    id: 'ID'
    useInTableOfContents: 'Boolean'
  }
  ComponentContentSocialProofBar: { // field return type name
    avatars: 'UploadFileRelationResponseCollection'
    html: 'String'
    id: 'ID'
    text: 'String'
  }
  ComponentContentVideo: { // field return type name
    consentBackgroundImage: 'UploadFileEntityResponse'
    id: 'ID'
    youtubeId: 'String'
  }
  ComponentElementsButton: { // field return type name
    externalUrl: 'String'
    id: 'ID'
    label: 'String'
    page: 'PageEntityResponse'
    style: 'ENUM_COMPONENTELEMENTSBUTTON_STYLE'
    target: 'ENUM_COMPONENTELEMENTSBUTTON_TARGET'
    variant: 'ENUM_COMPONENTELEMENTSBUTTON_VARIANT'
  }
  ComponentElementsHeadline: { // field return type name
    align: 'ENUM_COMPONENTELEMENTSHEADLINE_ALIGN'
    id: 'ID'
    text: 'String'
    variant: 'ENUM_COMPONENTELEMENTSHEADLINE_VARIANT'
  }
  ComponentElementsPricingPlan: { // field return type name
    btnLabel: 'String'
    features: 'String'
    highlightedText: 'String'
    href: 'String'
    id: 'ID'
    name: 'String'
    price: 'String'
  }
  ComponentElementsQuestionAndAnswer: { // field return type name
    answer: 'JSON'
    id: 'ID'
    question: 'String'
  }
  ComponentElementsResponsiveImage: { // field return type name
    id: 'ID'
    image: 'UploadFileEntityResponse'
    screenSize: 'ENUM_COMPONENTELEMENTSRESPONSIVEIMAGE_SCREENSIZE'
  }
  ComponentElementsRichText: { // field return type name
    align: 'ENUM_COMPONENTELEMENTSRICHTEXT_ALIGN'
    html: 'String'
    id: 'ID'
    text: 'String'
  }
  ComponentElementsSpacer: { // field return type name
    id: 'ID'
    spaceBottom: 'ENUM_COMPONENTELEMENTSSPACER_SPACEBOTTOM'
    spaceTop: 'ENUM_COMPONENTELEMENTSSPACER_SPACETOP'
  }
  ComponentLayoutsSidebarLayout: { // field return type name
    id: 'ID'
    sidebar_layout: 'SidebarLayoutEntityResponse'
  }
  ComponentNavigationDropdown: { // field return type name
    id: 'ID'
    links: 'ComponentNavigationLink'
  }
  ComponentNavigationLink: { // field return type name
    description: 'String'
    id: 'ID'
    image: 'UploadFileEntityResponse'
    label: 'String'
    page: 'PageEntityResponse'
    target: 'ENUM_COMPONENTNAVIGATIONLINK_TARGET'
    url: 'String'
  }
  ComponentNavigationLinkList: { // field return type name
    align: 'ENUM_COMPONENTNAVIGATIONLINKLIST_ALIGN'
    headline: 'String'
    id: 'ID'
    links: 'ComponentNavigationLink'
    orientation: 'ENUM_COMPONENTNAVIGATIONLINKLIST_ORIENTATION'
  }
  ComponentNavigationTableOfContents: { // field return type name
    id: 'ID'
    name: 'String'
  }
  EnablePreviewResponse: { // field return type name
    success: 'Boolean'
  }
  Error: { // field return type name
    code: 'String'
    message: 'String'
  }
  Faq: { // field return type name
    createdAt: 'DateTime'
    description: 'JSON'
    name: 'String'
    questions: 'ComponentElementsQuestionAndAnswer'
    updatedAt: 'DateTime'
  }
  FaqEntity: { // field return type name
    attributes: 'Faq'
    id: 'ID'
  }
  FaqEntityResponse: { // field return type name
    data: 'FaqEntity'
  }
  FaqEntityResponseCollection: { // field return type name
    data: 'FaqEntity'
    meta: 'ResponseCollectionMeta'
  }
  FaqRelationResponseCollection: { // field return type name
    data: 'FaqEntity'
  }
  Global: { // field return type name
    Logo: 'UploadFileEntityResponse'
    createdAt: 'DateTime'
    footer: 'GlobalFooterDynamicZone'
    twitterHandle: 'String'
    updatedAt: 'DateTime'
  }
  GlobalEntity: { // field return type name
    attributes: 'Global'
    id: 'ID'
  }
  GlobalEntityResponse: { // field return type name
    data: 'GlobalEntity'
  }
  GlobalEntityResponseCollection: { // field return type name
    data: 'GlobalEntity'
    meta: 'ResponseCollectionMeta'
  }
  GlobalRelationResponseCollection: { // field return type name
    data: 'GlobalEntity'
  }
  Hierarchy: { // field return type name
    createdAt: 'DateTime'
    page: 'PageEntityResponse'
    parent: 'HierarchyEntityResponse'
    publishedAt: 'DateTime'
    title: 'String'
    updatedAt: 'DateTime'
  }
  HierarchyEntity: { // field return type name
    attributes: 'Hierarchy'
    childIds: 'String'
    id: 'ID'
    parents: 'Breadcrumb'
  }
  HierarchyEntityResponse: { // field return type name
    data: 'HierarchyEntity'
  }
  HierarchyEntityResponseCollection: { // field return type name
    data: 'HierarchyEntity'
    meta: 'ResponseCollectionMeta'
  }
  HierarchyRelationResponseCollection: { // field return type name
    data: 'HierarchyEntity'
  }
  I18NLocale: { // field return type name
    code: 'String'
    createdAt: 'DateTime'
    name: 'String'
    updatedAt: 'DateTime'
  }
  I18NLocaleEntity: { // field return type name
    attributes: 'I18NLocale'
    id: 'ID'
  }
  I18NLocaleEntityResponse: { // field return type name
    data: 'I18NLocaleEntity'
  }
  I18NLocaleEntityResponseCollection: { // field return type name
    data: 'I18NLocaleEntity'
    meta: 'ResponseCollectionMeta'
  }
  I18NLocaleRelationResponseCollection: { // field return type name
    data: 'I18NLocaleEntity'
  }
  Menu: { // field return type name
    createdAt: 'DateTime'
    locale: 'String'
    localizations: 'MenuRelationResponseCollection'
    menu_items: 'MenuItemRelationResponseCollection'
    name: 'String'
    updatedAt: 'DateTime'
  }
  MenuEntity: { // field return type name
    attributes: 'Menu'
    id: 'ID'
  }
  MenuEntityResponse: { // field return type name
    data: 'MenuEntity'
  }
  MenuEntityResponseCollection: { // field return type name
    data: 'MenuEntity'
    meta: 'ResponseCollectionMeta'
  }
  MenuItem: { // field return type name
    components: 'MenuItemComponentsDynamicZone'
    createdAt: 'DateTime'
    label: 'String'
    locale: 'String'
    localizations: 'MenuItemRelationResponseCollection'
    name: 'String'
    page: 'PageEntityResponse'
    target: 'ENUM_MENUITEM_TARGET'
    updatedAt: 'DateTime'
    url: 'String'
  }
  MenuItemEntity: { // field return type name
    attributes: 'MenuItem'
    id: 'ID'
  }
  MenuItemEntityResponse: { // field return type name
    data: 'MenuItemEntity'
  }
  MenuItemEntityResponseCollection: { // field return type name
    data: 'MenuItemEntity'
    meta: 'ResponseCollectionMeta'
  }
  MenuItemRelationResponseCollection: { // field return type name
    data: 'MenuItemEntity'
  }
  MenuRelationResponseCollection: { // field return type name
    data: 'MenuEntity'
  }
  Mutation: { // field return type name
    changePassword: 'UsersPermissionsLoginPayload'
    createFaq: 'FaqEntityResponse'
    createHierarchy: 'HierarchyEntityResponse'
    createMenu: 'MenuEntityResponse'
    createMenuItem: 'MenuItemEntityResponse'
    createMenuItemLocalization: 'MenuItemEntityResponse'
    createMenuLocalization: 'MenuEntityResponse'
    createPage: 'PageEntityResponse'
    createPageLocalization: 'PageEntityResponse'
    createSidebarLayout: 'SidebarLayoutEntityResponse'
    createSidebarLayoutLocalization: 'SidebarLayoutEntityResponse'
    createUploadFile: 'UploadFileEntityResponse'
    createUploadFolder: 'UploadFolderEntityResponse'
    createUsersPermissionsRole: 'UsersPermissionsCreateRolePayload'
    createUsersPermissionsUser: 'UsersPermissionsUserEntityResponse'
    deleteFaq: 'FaqEntityResponse'
    deleteGlobal: 'GlobalEntityResponse'
    deleteHierarchy: 'HierarchyEntityResponse'
    deleteMenu: 'MenuEntityResponse'
    deleteMenuItem: 'MenuItemEntityResponse'
    deletePage: 'PageEntityResponse'
    deleteSidebarLayout: 'SidebarLayoutEntityResponse'
    deleteUploadFile: 'UploadFileEntityResponse'
    deleteUploadFolder: 'UploadFolderEntityResponse'
    deleteUsersPermissionsRole: 'UsersPermissionsDeleteRolePayload'
    deleteUsersPermissionsUser: 'UsersPermissionsUserEntityResponse'
    emailConfirmation: 'UsersPermissionsLoginPayload'
    enablePreview: 'EnablePreviewResponse'
    forgotPassword: 'UsersPermissionsPasswordPayload'
    login: 'UsersPermissionsLoginPayload'
    multipleUpload: 'UploadFileEntityResponse'
    register: 'UsersPermissionsLoginPayload'
    removeFile: 'UploadFileEntityResponse'
    resetPassword: 'UsersPermissionsLoginPayload'
    updateFaq: 'FaqEntityResponse'
    updateFileInfo: 'UploadFileEntityResponse'
    updateGlobal: 'GlobalEntityResponse'
    updateHierarchy: 'HierarchyEntityResponse'
    updateMenu: 'MenuEntityResponse'
    updateMenuItem: 'MenuItemEntityResponse'
    updatePage: 'PageEntityResponse'
    updateSidebarLayout: 'SidebarLayoutEntityResponse'
    updateUploadFile: 'UploadFileEntityResponse'
    updateUploadFolder: 'UploadFolderEntityResponse'
    updateUsersPermissionsRole: 'UsersPermissionsUpdateRolePayload'
    updateUsersPermissionsUser: 'UsersPermissionsUserEntityResponse'
    upload: 'UploadFileEntityResponse'
  }
  Page: { // field return type name
    components: 'PageComponentsDynamicZone'
    createdAt: 'DateTime'
    hierarchy: 'HierarchyEntityResponse'
    locale: 'String'
    localizations: 'PageRelationResponseCollection'
    metaDescription: 'String'
    metaKeywords: 'String'
    metaRobots: 'ENUM_PAGE_METAROBOTS'
    metaTitle: 'String'
    path: 'String'
    previewImage: 'UploadFileEntityResponse'
    publicationDate: 'DateTime'
    publishedAt: 'DateTime'
    structuredData: 'JSON'
    synopsis: 'String'
    title: 'String'
    updatedAt: 'DateTime'
  }
  PageEntity: { // field return type name
    attributes: 'Page'
    id: 'ID'
  }
  PageEntityResponse: { // field return type name
    data: 'PageEntity'
  }
  PageEntityResponseCollection: { // field return type name
    data: 'PageEntity'
    meta: 'ResponseCollectionMeta'
  }
  PageRelationResponseCollection: { // field return type name
    data: 'PageEntity'
  }
  Pagination: { // field return type name
    page: 'Int'
    pageCount: 'Int'
    pageSize: 'Int'
    total: 'Int'
  }
  Query: { // field return type name
    faq: 'FaqEntityResponse'
    faqs: 'FaqEntityResponseCollection'
    global: 'GlobalEntityResponse'
    hierarchies: 'HierarchyEntityResponseCollection'
    hierarchy: 'HierarchyEntityResponse'
    i18NLocale: 'I18NLocaleEntityResponse'
    i18NLocales: 'I18NLocaleEntityResponseCollection'
    me: 'UsersPermissionsMe'
    menu: 'MenuEntityResponse'
    menuItem: 'MenuItemEntityResponse'
    menuItems: 'MenuItemEntityResponseCollection'
    menus: 'MenuEntityResponseCollection'
    page: 'PageEntityResponse'
    pages: 'PageEntityResponseCollection'
    sidebarLayout: 'SidebarLayoutEntityResponse'
    sidebarLayouts: 'SidebarLayoutEntityResponseCollection'
    uploadFile: 'UploadFileEntityResponse'
    uploadFiles: 'UploadFileEntityResponseCollection'
    uploadFolder: 'UploadFolderEntityResponse'
    uploadFolders: 'UploadFolderEntityResponseCollection'
    usersPermissionsRole: 'UsersPermissionsRoleEntityResponse'
    usersPermissionsRoles: 'UsersPermissionsRoleEntityResponseCollection'
    usersPermissionsUser: 'UsersPermissionsUserEntityResponse'
    usersPermissionsUsers: 'UsersPermissionsUserEntityResponseCollection'
  }
  ResponseCollectionMeta: { // field return type name
    pagination: 'Pagination'
  }
  SidebarLayout: { // field return type name
    contentComponents: 'SidebarLayoutContentComponentsDynamicZone'
    createdAt: 'DateTime'
    locale: 'String'
    localizations: 'SidebarLayoutRelationResponseCollection'
    name: 'String'
    sidebarComponents: 'SidebarLayoutSidebarComponentsDynamicZone'
    stickySidebar: 'Boolean'
    updatedAt: 'DateTime'
  }
  SidebarLayoutEntity: { // field return type name
    attributes: 'SidebarLayout'
    id: 'ID'
  }
  SidebarLayoutEntityResponse: { // field return type name
    data: 'SidebarLayoutEntity'
  }
  SidebarLayoutEntityResponseCollection: { // field return type name
    data: 'SidebarLayoutEntity'
    meta: 'ResponseCollectionMeta'
  }
  SidebarLayoutRelationResponseCollection: { // field return type name
    data: 'SidebarLayoutEntity'
  }
  UploadFile: { // field return type name
    alternativeText: 'String'
    caption: 'String'
    createdAt: 'DateTime'
    ext: 'String'
    formats: 'JSON'
    hash: 'String'
    height: 'Int'
    mime: 'String'
    name: 'String'
    previewUrl: 'String'
    provider: 'String'
    provider_metadata: 'JSON'
    related: 'GenericMorph'
    size: 'Float'
    updatedAt: 'DateTime'
    url: 'String'
    width: 'Int'
  }
  UploadFileEntity: { // field return type name
    attributes: 'UploadFile'
    id: 'ID'
  }
  UploadFileEntityResponse: { // field return type name
    data: 'UploadFileEntity'
  }
  UploadFileEntityResponseCollection: { // field return type name
    data: 'UploadFileEntity'
    meta: 'ResponseCollectionMeta'
  }
  UploadFileRelationResponseCollection: { // field return type name
    data: 'UploadFileEntity'
  }
  UploadFolder: { // field return type name
    children: 'UploadFolderRelationResponseCollection'
    createdAt: 'DateTime'
    files: 'UploadFileRelationResponseCollection'
    name: 'String'
    parent: 'UploadFolderEntityResponse'
    path: 'String'
    pathId: 'Int'
    updatedAt: 'DateTime'
  }
  UploadFolderEntity: { // field return type name
    attributes: 'UploadFolder'
    id: 'ID'
  }
  UploadFolderEntityResponse: { // field return type name
    data: 'UploadFolderEntity'
  }
  UploadFolderEntityResponseCollection: { // field return type name
    data: 'UploadFolderEntity'
    meta: 'ResponseCollectionMeta'
  }
  UploadFolderRelationResponseCollection: { // field return type name
    data: 'UploadFolderEntity'
  }
  UsersPermissionsCreateRolePayload: { // field return type name
    ok: 'Boolean'
  }
  UsersPermissionsDeleteRolePayload: { // field return type name
    ok: 'Boolean'
  }
  UsersPermissionsLoginPayload: { // field return type name
    jwt: 'String'
    user: 'UsersPermissionsMe'
  }
  UsersPermissionsMe: { // field return type name
    blocked: 'Boolean'
    confirmed: 'Boolean'
    email: 'String'
    id: 'ID'
    role: 'UsersPermissionsMeRole'
    username: 'String'
  }
  UsersPermissionsMeRole: { // field return type name
    description: 'String'
    id: 'ID'
    name: 'String'
    type: 'String'
  }
  UsersPermissionsPasswordPayload: { // field return type name
    ok: 'Boolean'
  }
  UsersPermissionsPermission: { // field return type name
    action: 'String'
    createdAt: 'DateTime'
    role: 'UsersPermissionsRoleEntityResponse'
    updatedAt: 'DateTime'
  }
  UsersPermissionsPermissionEntity: { // field return type name
    attributes: 'UsersPermissionsPermission'
    id: 'ID'
  }
  UsersPermissionsPermissionEntityResponse: { // field return type name
    data: 'UsersPermissionsPermissionEntity'
  }
  UsersPermissionsPermissionEntityResponseCollection: { // field return type name
    data: 'UsersPermissionsPermissionEntity'
    meta: 'ResponseCollectionMeta'
  }
  UsersPermissionsPermissionRelationResponseCollection: { // field return type name
    data: 'UsersPermissionsPermissionEntity'
  }
  UsersPermissionsRole: { // field return type name
    createdAt: 'DateTime'
    description: 'String'
    name: 'String'
    permissions: 'UsersPermissionsPermissionRelationResponseCollection'
    type: 'String'
    updatedAt: 'DateTime'
    users: 'UsersPermissionsUserRelationResponseCollection'
  }
  UsersPermissionsRoleEntity: { // field return type name
    attributes: 'UsersPermissionsRole'
    id: 'ID'
  }
  UsersPermissionsRoleEntityResponse: { // field return type name
    data: 'UsersPermissionsRoleEntity'
  }
  UsersPermissionsRoleEntityResponseCollection: { // field return type name
    data: 'UsersPermissionsRoleEntity'
    meta: 'ResponseCollectionMeta'
  }
  UsersPermissionsRoleRelationResponseCollection: { // field return type name
    data: 'UsersPermissionsRoleEntity'
  }
  UsersPermissionsUpdateRolePayload: { // field return type name
    ok: 'Boolean'
  }
  UsersPermissionsUser: { // field return type name
    blocked: 'Boolean'
    confirmed: 'Boolean'
    createdAt: 'DateTime'
    email: 'String'
    provider: 'String'
    role: 'UsersPermissionsRoleEntityResponse'
    updatedAt: 'DateTime'
    username: 'String'
  }
  UsersPermissionsUserEntity: { // field return type name
    attributes: 'UsersPermissionsUser'
    id: 'ID'
  }
  UsersPermissionsUserEntityResponse: { // field return type name
    data: 'UsersPermissionsUserEntity'
  }
  UsersPermissionsUserEntityResponseCollection: { // field return type name
    data: 'UsersPermissionsUserEntity'
    meta: 'ResponseCollectionMeta'
  }
  UsersPermissionsUserRelationResponseCollection: { // field return type name
    data: 'UsersPermissionsUserEntity'
  }
}

export interface NexusGenArgTypes {
  ComponentContentButtonBar: {
    buttons: { // args
      filters?: NexusGenInputs['ComponentElementsButtonFiltersInput'] | null; // ComponentElementsButtonFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  ComponentContentHero: {
    responsiveImage: { // args
      filters?: NexusGenInputs['ComponentElementsResponsiveImageFiltersInput'] | null; // ComponentElementsResponsiveImageFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  ComponentContentImageGrid: {
    images: { // args
      filters?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  ComponentContentPagePreviewList: {
    pages: { // args
      filters?: NexusGenInputs['PageFiltersInput'] | null; // PageFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
      sort: Array<string | null> | null; // [String]
    }
  }
  ComponentContentPricing: {
    plans: { // args
      filters?: NexusGenInputs['ComponentElementsPricingPlanFiltersInput'] | null; // ComponentElementsPricingPlanFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  ComponentContentSocialProofBar: {
    avatars: { // args
      filters?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  ComponentNavigationDropdown: {
    links: { // args
      filters?: NexusGenInputs['ComponentNavigationLinkFiltersInput'] | null; // ComponentNavigationLinkFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  ComponentNavigationLinkList: {
    links: { // args
      filters?: NexusGenInputs['ComponentNavigationLinkFiltersInput'] | null; // ComponentNavigationLinkFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  Faq: {
    questions: { // args
      filters?: NexusGenInputs['ComponentElementsQuestionAndAnswerFiltersInput'] | null; // ComponentElementsQuestionAndAnswerFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  Menu: {
    localizations: { // args
      filters?: NexusGenInputs['MenuFiltersInput'] | null; // MenuFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    menu_items: { // args
      filters?: NexusGenInputs['MenuItemFiltersInput'] | null; // MenuItemFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  MenuItem: {
    localizations: { // args
      filters?: NexusGenInputs['MenuItemFiltersInput'] | null; // MenuItemFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  Mutation: {
    changePassword: { // args
      currentPassword: string; // String!
      password: string; // String!
      passwordConfirmation: string; // String!
    }
    createFaq: { // args
      data: NexusGenInputs['FaqInput']; // FaqInput!
    }
    createHierarchy: { // args
      data: NexusGenInputs['HierarchyInput']; // HierarchyInput!
    }
    createMenu: { // args
      data: NexusGenInputs['MenuInput']; // MenuInput!
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
    }
    createMenuItem: { // args
      data: NexusGenInputs['MenuItemInput']; // MenuItemInput!
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
    }
    createMenuItemLocalization: { // args
      data?: NexusGenInputs['MenuItemInput'] | null; // MenuItemInput
      id?: string | null; // ID
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
    }
    createMenuLocalization: { // args
      data?: NexusGenInputs['MenuInput'] | null; // MenuInput
      id?: string | null; // ID
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
    }
    createPage: { // args
      data: NexusGenInputs['PageInput']; // PageInput!
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
    }
    createPageLocalization: { // args
      data?: NexusGenInputs['PageInput'] | null; // PageInput
      id?: string | null; // ID
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
    }
    createSidebarLayout: { // args
      data: NexusGenInputs['SidebarLayoutInput']; // SidebarLayoutInput!
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
    }
    createSidebarLayoutLocalization: { // args
      data?: NexusGenInputs['SidebarLayoutInput'] | null; // SidebarLayoutInput
      id?: string | null; // ID
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
    }
    createUploadFile: { // args
      data: NexusGenInputs['UploadFileInput']; // UploadFileInput!
    }
    createUploadFolder: { // args
      data: NexusGenInputs['UploadFolderInput']; // UploadFolderInput!
    }
    createUsersPermissionsRole: { // args
      data: NexusGenInputs['UsersPermissionsRoleInput']; // UsersPermissionsRoleInput!
    }
    createUsersPermissionsUser: { // args
      data: NexusGenInputs['UsersPermissionsUserInput']; // UsersPermissionsUserInput!
    }
    deleteFaq: { // args
      id: string; // ID!
    }
    deleteHierarchy: { // args
      id: string; // ID!
    }
    deleteMenu: { // args
      id: string; // ID!
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
    }
    deleteMenuItem: { // args
      id: string; // ID!
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
    }
    deletePage: { // args
      id: string; // ID!
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
    }
    deleteSidebarLayout: { // args
      id: string; // ID!
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
    }
    deleteUploadFile: { // args
      id: string; // ID!
    }
    deleteUploadFolder: { // args
      id: string; // ID!
    }
    deleteUsersPermissionsRole: { // args
      id: string; // ID!
    }
    deleteUsersPermissionsUser: { // args
      id: string; // ID!
    }
    emailConfirmation: { // args
      confirmation: string; // String!
    }
    enablePreview: { // args
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
      path?: string | null; // String
    }
    forgotPassword: { // args
      email: string; // String!
    }
    login: { // args
      input: NexusGenInputs['UsersPermissionsLoginInput']; // UsersPermissionsLoginInput!
    }
    multipleUpload: { // args
      field?: string | null; // String
      files: Array<NexusGenScalars['Upload'] | null>; // [Upload]!
      ref?: string | null; // String
      refId?: string | null; // ID
    }
    register: { // args
      input: NexusGenInputs['UsersPermissionsRegisterInput']; // UsersPermissionsRegisterInput!
    }
    removeFile: { // args
      id: string; // ID!
    }
    resetPassword: { // args
      code: string; // String!
      password: string; // String!
      passwordConfirmation: string; // String!
    }
    updateFaq: { // args
      data: NexusGenInputs['FaqInput']; // FaqInput!
      id: string; // ID!
    }
    updateFileInfo: { // args
      id: string; // ID!
      info?: NexusGenInputs['FileInfoInput'] | null; // FileInfoInput
    }
    updateGlobal: { // args
      data: NexusGenInputs['GlobalInput']; // GlobalInput!
    }
    updateHierarchy: { // args
      data: NexusGenInputs['HierarchyInput']; // HierarchyInput!
      id: string; // ID!
    }
    updateMenu: { // args
      data: NexusGenInputs['MenuInput']; // MenuInput!
      id: string; // ID!
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
    }
    updateMenuItem: { // args
      data: NexusGenInputs['MenuItemInput']; // MenuItemInput!
      id: string; // ID!
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
    }
    updatePage: { // args
      data: NexusGenInputs['PageInput']; // PageInput!
      id: string; // ID!
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
    }
    updateSidebarLayout: { // args
      data: NexusGenInputs['SidebarLayoutInput']; // SidebarLayoutInput!
      id: string; // ID!
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
    }
    updateUploadFile: { // args
      data: NexusGenInputs['UploadFileInput']; // UploadFileInput!
      id: string; // ID!
    }
    updateUploadFolder: { // args
      data: NexusGenInputs['UploadFolderInput']; // UploadFolderInput!
      id: string; // ID!
    }
    updateUsersPermissionsRole: { // args
      data: NexusGenInputs['UsersPermissionsRoleInput']; // UsersPermissionsRoleInput!
      id: string; // ID!
    }
    updateUsersPermissionsUser: { // args
      data: NexusGenInputs['UsersPermissionsUserInput']; // UsersPermissionsUserInput!
      id: string; // ID!
    }
    upload: { // args
      field?: string | null; // String
      file: NexusGenScalars['Upload']; // Upload!
      info?: NexusGenInputs['FileInfoInput'] | null; // FileInfoInput
      ref?: string | null; // String
      refId?: string | null; // ID
    }
  }
  Page: {
    localizations: { // args
      filters?: NexusGenInputs['PageFiltersInput'] | null; // PageFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
      sort: Array<string | null> | null; // [String]
    }
  }
  Query: {
    faq: { // args
      id?: string | null; // ID
    }
    faqs: { // args
      filters?: NexusGenInputs['FaqFiltersInput'] | null; // FaqFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    hierarchies: { // args
      filters?: NexusGenInputs['HierarchyFiltersInput'] | null; // HierarchyFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
      sort: Array<string | null> | null; // [String]
    }
    hierarchy: { // args
      id?: string | null; // ID
    }
    i18NLocale: { // args
      id?: string | null; // ID
    }
    i18NLocales: { // args
      filters?: NexusGenInputs['I18NLocaleFiltersInput'] | null; // I18NLocaleFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    menu: { // args
      id?: string | null; // ID
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
    }
    menuItem: { // args
      id?: string | null; // ID
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
    }
    menuItems: { // args
      filters?: NexusGenInputs['MenuItemFiltersInput'] | null; // MenuItemFiltersInput
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    menus: { // args
      filters?: NexusGenInputs['MenuFiltersInput'] | null; // MenuFiltersInput
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    page: { // args
      id?: string | null; // ID
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
    }
    pages: { // args
      filters?: NexusGenInputs['PageFiltersInput'] | null; // PageFiltersInput
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
      sort: Array<string | null> | null; // [String]
    }
    sidebarLayout: { // args
      id?: string | null; // ID
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
    }
    sidebarLayouts: { // args
      filters?: NexusGenInputs['SidebarLayoutFiltersInput'] | null; // SidebarLayoutFiltersInput
      locale?: NexusGenScalars['I18NLocaleCode'] | null; // I18NLocaleCode
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    uploadFile: { // args
      id?: string | null; // ID
    }
    uploadFiles: { // args
      filters?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    uploadFolder: { // args
      id?: string | null; // ID
    }
    uploadFolders: { // args
      filters?: NexusGenInputs['UploadFolderFiltersInput'] | null; // UploadFolderFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    usersPermissionsRole: { // args
      id?: string | null; // ID
    }
    usersPermissionsRoles: { // args
      filters?: NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null; // UsersPermissionsRoleFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    usersPermissionsUser: { // args
      id?: string | null; // ID
    }
    usersPermissionsUsers: { // args
      filters?: NexusGenInputs['UsersPermissionsUserFiltersInput'] | null; // UsersPermissionsUserFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  SidebarLayout: {
    localizations: { // args
      filters?: NexusGenInputs['SidebarLayoutFiltersInput'] | null; // SidebarLayoutFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  UploadFolder: {
    children: { // args
      filters?: NexusGenInputs['UploadFolderFiltersInput'] | null; // UploadFolderFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    files: { // args
      filters?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
  UsersPermissionsRole: {
    permissions: { // args
      filters?: NexusGenInputs['UsersPermissionsPermissionFiltersInput'] | null; // UsersPermissionsPermissionFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
    users: { // args
      filters?: NexusGenInputs['UsersPermissionsUserFiltersInput'] | null; // UsersPermissionsUserFiltersInput
      pagination: NexusGenInputs['PaginationArg'] | null; // PaginationArg
      sort: Array<string | null> | null; // [String]
    }
  }
}

export interface NexusGenAbstractTypeMembers {
  GenericMorph: "ComponentContentButtonBar" | "ComponentContentClientQuote" | "ComponentContentCode" | "ComponentContentFaq" | "ComponentContentHero" | "ComponentContentImageGrid" | "ComponentContentImageText" | "ComponentContentPagePreviewList" | "ComponentContentPricing" | "ComponentContentSectionHeadline" | "ComponentContentSocialProofBar" | "ComponentContentVideo" | "ComponentElementsButton" | "ComponentElementsHeadline" | "ComponentElementsPricingPlan" | "ComponentElementsQuestionAndAnswer" | "ComponentElementsResponsiveImage" | "ComponentElementsRichText" | "ComponentElementsSpacer" | "ComponentLayoutsSidebarLayout" | "ComponentNavigationDropdown" | "ComponentNavigationLink" | "ComponentNavigationLinkList" | "ComponentNavigationTableOfContents" | "Faq" | "Global" | "Hierarchy" | "I18NLocale" | "Menu" | "MenuItem" | "Page" | "SidebarLayout" | "UploadFile" | "UploadFolder" | "UsersPermissionsPermission" | "UsersPermissionsRole" | "UsersPermissionsUser"
  GlobalFooterDynamicZone: "ComponentElementsRichText" | "ComponentNavigationLinkList" | "Error"
  MenuItemComponentsDynamicZone: "ComponentContentPagePreviewList" | "ComponentNavigationLinkList" | "Error"
  PageComponentsDynamicZone: "ComponentContentButtonBar" | "ComponentContentClientQuote" | "ComponentContentFaq" | "ComponentContentHero" | "ComponentContentImageGrid" | "ComponentContentImageText" | "ComponentContentPagePreviewList" | "ComponentContentPricing" | "ComponentContentSectionHeadline" | "ComponentContentSocialProofBar" | "ComponentContentVideo" | "ComponentElementsRichText" | "ComponentElementsSpacer" | "ComponentLayoutsSidebarLayout" | "ComponentNavigationLinkList" | "Error"
  SidebarLayoutContentComponentsDynamicZone: "ComponentContentCode" | "ComponentContentImageGrid" | "ComponentContentSectionHeadline" | "ComponentContentVideo" | "ComponentElementsRichText" | "Error"
  SidebarLayoutSidebarComponentsDynamicZone: "ComponentNavigationLinkList" | "ComponentNavigationTableOfContents" | "Error"
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = keyof NexusGenUnions;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = "GenericMorph" | "GlobalFooterDynamicZone" | "MenuItemComponentsDynamicZone" | "PageComponentsDynamicZone" | "SidebarLayoutContentComponentsDynamicZone" | "SidebarLayoutSidebarComponentsDynamicZone";

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}